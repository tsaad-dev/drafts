<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-teas-yang-rsvp-19" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="RSVP YANG Data Model">A YANG Data Model for Resource Reservation Protocol (RSVP)</title>

    <author initials="V. P." surname="Beeram" fullname="Vishnu Pavan Beeram">
      <organization>Juniper Networks</organization>
      <address>
        <email>vbeeram@juniper.net</email>
      </address>
    </author>
    <author initials="T." surname="Saad" fullname="Tarek Saad">
      <organization>Juniper Networks</organization>
      <address>
        <email>tsaad@juniper.net</email>
      </address>
    </author>
    <author initials="R." surname="Gandhi" fullname="Rakesh Gandhi">
      <organization>Cisco Systems, Inc.</organization>
      <address>
        <email>rgandhi@cisco.com</email>
      </address>
    </author>
    <author initials="X." surname="Liu" fullname="Xufeng Liu">
      <organization>Volta Networks</organization>
      <address>
        <email>xufeng.liu.ietf@gmail.com</email>
      </address>
    </author>
    <author initials="I." surname="Bryskin" fullname="Igor Bryskin">
      <organization>Individual</organization>
      <address>
        <email>i_bryskin@yahoo.com</email>
      </address>
    </author>

    <date year="2024" month="February" day="28"/>

    
    <workgroup>TEAS Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a YANG data model for the configuration and management of
the RSVP protocol. The YANG data model covers the building blocks that may be
augmented by other RSVP extension data models such as RSVP Traffic-Engineering
(RSVP-TE). It is divided into two modules that cover the basic and extended
RSVP features.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>YANG <xref target="RFC6020"/> and <xref target="RFC7950"/> is a data modeling language that was
introduced to define the contents of a conceptual data store that allows
networked devices to be managed using NETCONF <xref target="RFC6241"/>. YANG has proved
relevant beyond its initial confines, as bindings to other interfaces (e.g.
RESTCONF <xref target="RFC8040"/>) and encoding other than XML (e.g. JSON) are being defined.
Furthermore, YANG data models can be used as the basis of implementation for
other interfaces, such as CLI and programmatic APIs.</t>

<t>This document defines a YANG data model for the configuration and management of
the RSVP protocol <xref target="RFC2205"/>. The data model is divided into two modules:
a base and extended RSVP YANG modules. The RSVP base YANG 'ietf-rsvp' module covers the
data that is core to the function of the RSVP protocol and MUST be supported by
vendors that support RSVP protocol <xref target="RFC2205"/>.  The RSVP extended 'ietf-rsvp-extended'
module covers the data that is optional, or provides ability to tune
RSVP protocol base functionality. The support for RSVP extended module
features by vendors is considered optional.</t>

<t>The RSVP YANG model provides the building blocks needed to allow augmentation
by other models that extend the RSVP protocol-- such as using RSVP extensions to
signal Label Switched Paths (LSPs) as defined in <xref target="RFC3209"/>.</t>

<t>The YANG module(s) defined in this document are compatible with the Network
Management Datastore Architecture (NMDA) <xref target="RFC7950"/>.</t>

</section>
<section anchor="requirements-language"><name>Requirements Language</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
"SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
when, and only when, they appear in all capitals, as shown here.</t>

<t>The terminology for describing YANG data models is found in <xref target="RFC7950"/>.</t>

<section anchor="prefixes-in-data-node-names"><name>Prefixes in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects are prefixed
using the standard prefix associated with the corresponding YANG imported
modules, as shown in <xref target="tab1"/>.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab1">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>YANG module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>if</c>
      <c>ietf-interfaces</c>
      <c><xref target="RFC8343"/></c>
      <c>rt</c>
      <c>ietf-routing</c>
      <c><xref target="RFC8349"/></c>
      <c>rt-types</c>
      <c>ietf-routing-types</c>
      <c><xref target="RFC8294"/></c>
      <c>inet</c>
      <c>ietf-inet-types</c>
      <c><xref target="RFC6991"/></c>
      <c>yang</c>
      <c>ietf-yang-types</c>
      <c><xref target="RFC6991"/></c>
      <c>key-chain</c>
      <c>ietf-key-chain</c>
      <c><xref target="RFC8177"/></c>
</texttable>

</section>
<section anchor="model-tree-diagram"><name>Model Tree Diagram</name>

<t>A full tree diagram of the module(s) defined in this document is given in
subsequent sections  as per the syntax defined in <xref target="RFC8340"/>.</t>

</section>
</section>
<section anchor="model-overview"><name>Model Overview</name>

<t>The RSVP YANG module augments the "control-plane-protocol" entry from the
'ietf-routing' module defined in <xref target="RFC8349"/>. It also defines the identity
"rsvp" of base type "rt:routing-protocol" to identify the RSVP routing protocol.</t>

<t>The 'ietf-rsvp' model defines a single instance of the RSVP protocol.  The top
'rsvp' container encompases data for one such RSVP protocol instance.  Multiple
instances can be defined as multiple control-plane protocols instances as
described in <xref target="RFC8349"/>.</t>

<t>The YANG data model defined has the common building blocks for the operation of
the base RSVP protocol for the session type defined in <xref target="RFC2205"/>. The
augmentation of this model by other models (e.g. to support RSVP Traffic
Engineering (TE) extensions for signaling Label Switched Paths (LSPs)) are
outside the scope of this document and are discussed in separate document(s).</t>

<section anchor="modules-relationship"><name>Module(s) Relationship</name>

<t>This RSVP YANG data model defined in this document is divided into two modules: a base and extended
modules. The RSVP data covered in 'ietf-rsvp' module are categorized as core to
the function of the protocol and MUST be supported by vendors claiming the support for RSVP
protocol <xref target="RFC2205"/>.</t>

<t>The RSVP extended features that are covered in 'ietf-rsvp-extended' module are
categorized as either optional or providing ability to better tune the basic
functionality of the RSVP protocol. The support for RSVP extended features by
all vendors is considered optional.</t>

<t>The relationship between the base and RSVP extended YANG modules and the IETF
routing YANG model is shown in <xref target="figctrl"/>.</t>

<figure title="Relationship of RSVP and RSVP extended modules with other
protocol modules" anchor="figctrl"><artwork><![CDATA[
                +--------------+
       Routing  | ietf-routing |
                +--------------+
                      ^
                      |
                 +-----------+ 
  RSVP module    | ietf-rsvp |
                 +-----------+
                      ^
                      |                    ^: augment relationship
  RSVP extended       |
    module       +--------------------+
                 | ietf-rsvp-extended |
                 +--------------------+
]]></artwork></figure>

</section>
<section anchor="CoreFeatures"><name>Core Features</name>

<t>The RSVP data covered in the 'ietf-rsvp' YANG module provides the common building
blocks that are required to configure, operate and manage the RSVP protocol
and MUST be supported by vendors that claim the support for base RSVP protocol
defined in <xref target="RFC2205"/>.</t>

<t>In addition, the following standard RSVP core features are modeled under the
'ietf-rsvp' module:</t>

<t><list style="symbols">
  <t>Basic operational statistics, including protocol messages, packets and errors.</t>
  <t>Basic RSVP authentication feature as defined in <xref target="RFC2747"/>) using string
based authentication key.</t>
  <t>Basic RSVP Refresh Reduction feature as defined in (<xref target="RFC2961"/>).</t>
  <t>Basic RSVP Hellos feature as defined in (<xref target="RFC3209"/>)</t>
  <t>Basic RSVP Graceful Restart feature as defined in <xref target="RFC3473"/>, <xref target="RFC5063"/>, and
<xref target="RFC5495"/>.</t>
</list></t>

</section>
<section anchor="OptionalFeatures"><name>Optional Features</name>

<t>Optional features are beyond the basic configuration, and operation of the
RSVP protocol. The decision whether to support these RSVP features on a
particular device is left to the vendor that supports the RSVP core features.</t>

<t>The following optional features that are covered in the 'ietf-rsvp-extended'
YANG module:</t>

<t><list style="symbols">
  <t>Advanced operational statistics, including protocol messages, packets and errors.</t>
  <t>Advanced RSVP authentication features as defined in <xref target="RFC2747"/>) using various
authentication key types including those defined in <xref target="RFC8177"/>.</t>
  <t>Advanced RSVP Refresh Reduction features defined in (<xref target="RFC2961"/>).</t>
  <t>Advanced RSVP Hellos features as defined in <xref target="RFC3209"/>, and <xref target="rfc4558"/>.</t>
  <t>Advanced RSVP Graceful Restart features as defined in <xref target="RFC3473"/>, <xref target="RFC5063"/>, and
<xref target="RFC5495"/>.</t>
</list></t>

</section>
<section anchor="data-model-structure"><name>Data Model Structure</name>

<t>The RSVP YANG data model defines the 'rsvp' top-level container that contains
the configuration and operational state for the RSVP protocol.
The presence of this container enables the RSVP protocol functionality.</t>

<t>The 'rsvp' top-level container also includes data that has router level scope
(i.e. applicable to all objects modeled under rsvp). It also contains
configuration and state data about the following types of RSVP objects:</t>

<t><list style="symbols">
  <t>interfaces</t>
  <t>neighbors</t>
  <t>sessions</t>
</list></t>

<t>The derived state data is contained in "read-only" nodes directly under the
intended object as shown in <xref target="fig-highlevel"/>.</t>

<figure title="RSVP high-level tree model view" anchor="fig-highlevel"><artwork><![CDATA[
module: ietf-rsvp
   +--rw rsvp!
      +--rw <<router-level scope data>>
         .
         .
      +--rw interfaces
            .
            +-- ro <<derived state associated with interfaces>>
         .
         .
      +--rw neighbors
            .
            +-- ro <<derived state associated with the LSP Tunnel>>
         .
         .
      +--rw sessions
            .
            +-- ro <<derived state associated with the LSP Tunnel>>
         .
   rpcs:
      +--x clear-session
      +--x clear-neighbor
      +--x clear-authentication

]]></artwork></figure>

<t>The following</t>

<t>'router-level':</t>

<ul empty="true"><li>
  <t>The router-level scope configuration and state data are applicable to all
modeled objects under the top-level 'rsvp' container, and MAY affect the RSVP
protocol behavior.</t>
</li></ul>

<t>'interfaces':</t>

<ul empty="true"><li>
  <t>The 'interfaces' container includes a list of RSVP enabled interfaces. It
also includes RSVP configuration and state data that is applicable to all
interfaces.  An entry in the interfaces list MAY carry its own configuration
or state data. Any data or state under the "interfaces" container level is
equally applicable to all interfaces unless it is explicitly overridden by
configuration or state under a specific interface.</t>
</li></ul>

<t>'neighbors' :</t>

<ul empty="true"><li>
  <t>The 'neighbors' container includes a list of RSVP neighbors. An entry in the
RSVP neighbor list MAY carry its own configuration and state relevant to the
specific RSVP neighbor. The RSVP neighbors can be dynamically discovered using
RSVP signaling, or can be explicitly configured.</t>
</li></ul>

<t>'sessions':</t>

<ul empty="true"><li>
  <t>The 'sessions' container includes a list RSVP sessions. An entry in the RSVP
session list MAY carry its own configuration and state relevant to a specific
RSVP session. RSVP sessions are usually derived state that are created as
result of signaling. This model defines attributes related to IP RSVP
sessions as defined in <xref target="RFC2205"/>.</t>
</li></ul>

<t>The defined YANG data model supports configuration inheritance for neighbors, and
interfaces.  Data nodes defined under the main container (e.g. the container
that encompasses the list of interfaces, or neighbors) are assumed to apply
equally to all elements of the list, unless overridden explicitly for a certain
element (e.g. interface).</t>

</section>
<section anchor="model-notifications"><name>Model Notifications</name>

<t>Modeling notifications data is key in any defined YANG data model. <xref target="RFC8639"/> and
<xref target="RFC8641"/> define a subscription and push mechanism for YANG datastores. This
mechanism currently allows the user to:</t>

<t><list style="symbols">
  <t>Subscribe notifications on a per client basis</t>
  <t>Specify subtree filters <xref target="RFC6241"/> or XPath filters <xref target="RFC8639"/> so that only interested
contents will be sent.</t>
  <t>Specify either periodic or on-demand notifications.</t>
</list></t>

</section>
</section>
<section anchor="rsvp-base-yang-model"><name>RSVP Base YANG Model</name>

<t>The RSVP base module includes the core features and building blocks for modeling the RSVP
protocol as described in <xref target="CoreFeatures"/>.</t>

<section anchor="tree-diagram"><name>Tree Diagram</name>

<t><xref target="fig-rsvp-tree"/> shows the YANG tree representation for configuration, state
data and RPCs that are covered in 'ietf-rsvp' YANG module:</t>

<figure title="RSVP model tree diagram" anchor="fig-rsvp-tree"><artwork><![CDATA[
module: ietf-rsvp

  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol:
    +--rw rsvp!
       +--rw interfaces
       |  +--rw refresh-reduction
       |  |  +--rw enabled?   boolean
       |  +--rw hellos
       |  |  +--rw enabled?   boolean
       |  +--rw authentication
       |  |  +--rw enabled?              boolean
       |  |  +--rw authentication-key?   string
       |  |  +--rw crypto-algorithm?     identityref
       |  +--ro statistics
       |  |  +--ro messages
       |  |  |  +--ro ack-sent?                       yang:counter64
       |  |  |  +--ro ack-received?                   yang:counter64
       |  |  |  +--ro bundle-sent?                    yang:counter64
       |  |  |  +--ro bundle-received?                yang:counter64
       |  |  |  +--ro hello-sent?                     yang:counter64
       |  |  |  +--ro hello-received?                 yang:counter64
       |  |  |  +--ro integrity-challenge-sent?       yang:counter64
       |  |  |  +--ro integrity-challenge-received?   yang:counter64
       |  |  |  +--ro integrity-response-sent?        yang:counter64
       |  |  |  +--ro integrity-response-received?    yang:counter64
       |  |  |  +--ro notify-sent?                    yang:counter64
       |  |  |  +--ro notify-received?                yang:counter64
       |  |  |  +--ro path-sent?                      yang:counter64
       |  |  |  +--ro path-received?                  yang:counter64
       |  |  |  +--ro path-err-sent?                  yang:counter64
       |  |  |  +--ro path-err-received?              yang:counter64
       |  |  |  +--ro path-tear-sent?                 yang:counter64
       |  |  |  +--ro path-tear-received?             yang:counter64
       |  |  |  +--ro resv-sent?                      yang:counter64
       |  |  |  +--ro resv-received?                  yang:counter64
       |  |  |  +--ro resv-confirm-sent?              yang:counter64
       |  |  |  +--ro resv-confirm-received?          yang:counter64
       |  |  |  +--ro resv-err-sent?                  yang:counter64
       |  |  |  +--ro resv-err-received?              yang:counter64
       |  |  |  +--ro resv-tear-sent?                 yang:counter64
       |  |  |  +--ro resv-tear-received?             yang:counter64
       |  |  |  +--ro srefresh-sent?                  yang:counter64
       |  |  |  +--ro srefresh-received?              yang:counter64
       |  |  |  +--ro unknown-messages-received?      yang:counter64
       |  |  +--ro packets
       |  |  |  +--ro sent?       yang:counter64
       |  |  |  +--ro received?   yang:counter64
       |  |  +--ro errors
       |  |     +--ro authenticate?    yang:counter64
       |  |     +--ro checksum?        yang:counter64
       |  |     +--ro packet-length?   yang:counter64
       |  +--rw interface* [name]
       |     +--rw name                 if:interface-ref
       |     +--rw refresh-reduction
       |     |  +--rw enabled?   boolean
       |     +--rw hellos
       |     |  +--rw enabled?   boolean
       |     +--rw authentication
       |     |  +--rw enabled?              boolean
       |     |  +--rw authentication-key?   string
       |     |  +--rw crypto-algorithm?     identityref
       |     +--ro statistics
       |        +--ro messages
       |        |  +--ro ack-sent?
       |        |  |       yang:counter64
       |        |  +--ro ack-received?
       |        |  |       yang:counter64
       |        |  +--ro bundle-sent?
       |        |  |       yang:counter64
       |        |  +--ro bundle-received?
       |        |  |       yang:counter64
       |        |  +--ro hello-sent?
       |        |  |       yang:counter64
       |        |  +--ro hello-received?
       |        |  |       yang:counter64
       |        |  +--ro integrity-challenge-sent?
       |        |  |       yang:counter64
       |        |  +--ro integrity-challenge-received?
       |        |  |       yang:counter64
       |        |  +--ro integrity-response-sent?
       |        |  |       yang:counter64
       |        |  +--ro integrity-response-received?
       |        |  |       yang:counter64
       |        |  +--ro notify-sent?
       |        |  |       yang:counter64
       |        |  +--ro notify-received?
       |        |  |       yang:counter64
       |        |  +--ro path-sent?
       |        |  |       yang:counter64
       |        |  +--ro path-received?
       |        |  |       yang:counter64
       |        |  +--ro path-err-sent?
       |        |  |       yang:counter64
       |        |  +--ro path-err-received?
       |        |  |       yang:counter64
       |        |  +--ro path-tear-sent?
       |        |  |       yang:counter64
       |        |  +--ro path-tear-received?
       |        |  |       yang:counter64
       |        |  +--ro resv-sent?
       |        |  |       yang:counter64
       |        |  +--ro resv-received?
       |        |  |       yang:counter64
       |        |  +--ro resv-confirm-sent?
       |        |  |       yang:counter64
       |        |  +--ro resv-confirm-received?
       |        |  |       yang:counter64
       |        |  +--ro resv-err-sent?
       |        |  |       yang:counter64
       |        |  +--ro resv-err-received?
       |        |  |       yang:counter64
       |        |  +--ro resv-tear-sent?
       |        |  |       yang:counter64
       |        |  +--ro resv-tear-received?
       |        |  |       yang:counter64
       |        |  +--ro srefresh-sent?
       |        |  |       yang:counter64
       |        |  +--ro srefresh-received?
       |        |  |       yang:counter64
       |        |  +--ro unknown-messages-received?
       |        |          yang:counter64
       |        +--ro packets
       |        |  +--ro sent?       yang:counter64
       |        |  +--ro received?   yang:counter64
       |        +--ro errors
       |           +--ro authenticate?    yang:counter64
       |           +--ro checksum?        yang:counter64
       |           +--ro packet-length?   yang:counter64
       +--rw sessions
       |  +--ro session-ip*
       |          [destination protocol-id destination-port]
       |     +--ro destination-port    uint16
       |     +--ro protocol-id         uint8
       |     +--ro source?             inet:ip-address
       |     +--ro destination         inet:ip-address
       |     +--ro session-name?       string
       |     +--ro session-status?     enumeration
       |     +--ro session-type        identityref
       |     +--ro psbs
       |     |  +--ro psb* []
       |     |     +--ro source-port?   inet:port-number
       |     |     +--ro expires-in?    uint32
       |     +--ro rsbs
       |        +--ro rsb* []
       |           +--ro source-port?         inet:port-number
       |           +--ro reservation-style?   identityref
       |           +--ro expires-in?          uint32
       +--rw neighbors
       |  +--rw neighbor* [address]
       |     +--rw address                      inet:ip-address
       |     +--rw epoch?                       uint32
       |     +--rw expiry-time?                 uint32
       |     +--rw graceful-restart
       |     |  +--ro neighbor-restart-time?    uint32
       |     |  +--ro neighbor-recovery-time?   uint32
       |     |  +--ro helper-mode
       |     |     +--ro neighbor-restart-time-remaining?    uint32
       |     |     +--ro neighbor-recovery-time-remaining?   uint32
       |     +--ro hello-status?                enumeration
       |     +--rw interface?                   if:interface-ref
       |     +--ro neighbor-status?             enumeration
       |     +--rw refresh-reduction-capable?   boolean
       |     +--ro restart-count?               yang:counter32
       |     +--ro restart-time?                yang:date-and-time
       +--rw graceful-restart
          +--rw enabled?               boolean
          +--rw local-restart-time?    uint32
          +--rw local-recovery-time?   uint32
          +--rw helper-mode
             +--rw enabled?                    boolean
             +--rw max-helper-restart-time?    uint32
             +--rw max-helper-recovery-time?   uint32

  rpcs:
    +---x clear-session
    |  +---w input
    |     +---w routing-protocol-instance-name    leafref
    |     +---w (filter-type)
    |        +--:(match-all)
    |        |  +---w all                         empty
    |        +--:(match-one)
    |           +---w session-info
    |              +---w (session-type)
    |                 +--:(rsvp-session-ip)
    |                    +---w destination         leafref
    |                    +---w protocol-id         uint8
    |                    +---w destination-port    inet:ip-address
    +---x clear-neighbor
    |  +---w input
    |     +---w routing-protocol-instance-name    leafref
    |     +---w (filter-type)
    |        +--:(match-all)
    |        |  +---w all                         empty
    |        +--:(match-one)
    |           +---w neighbor-address            leafref
    +---x clear-authentication
       +---w input
          +---w routing-protocol-instance-name    leafref
          +---w (filter-type)
             +--:(match-all)
             |  +---w all                         empty
             +--:(match-one-interface)
                +---w interface?                  if:interface-ref
]]></artwork></figure>

</section>
<section anchor="rsvp-yang-mod"><name>YANG Module</name>

<t>The ietf-rsvp module imports from the following modules:</t>

<t><list style="symbols">
  <t>ietf-interfaces defined in <xref target="RFC8343"/></t>
  <t>ietf-yang-types and ietf-inet-types defined in <xref target="RFC6991"/></t>
  <t>ietf-routing defined in <xref target="RFC8349"/></t>
  <t>ietf-key-chain defined in <xref target="RFC8177"/></t>
  <t>ietf-netconf-acm defined in <xref target="RFC8341"/></t>
</list></t>

<t>This module also references the following documents:
<xref target="RFC2205"/>, <xref target="RFC5495"/>, <xref target="RFC3473"/>, <xref target="RFC5063"/>, <xref target="RFC2747"/>, <xref target="RFC3209"/>, and <xref target="RFC2961"/>.</t>

<figure><artwork><![CDATA[
<CODE BEGINS> file "ietf-rsvp@2023-10-06.yang"
module ietf-rsvp {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-rsvp";

  /* Replace with IANA when assigned */

  prefix rsvp;

  import ietf-interfaces {
    prefix if;
    reference
      "RFC8343: A YANG Data Model for Interface Management";
  }
  import ietf-inet-types {
    prefix inet;
    reference
      "RFC6991: Common YANG Data Types";
  }
  import ietf-yang-types {
    prefix yang;
    reference
      "RFC6991: Common YANG Data Types";
  }
  import ietf-routing {
    prefix rt;
    reference
      "RFC8349: A YANG Data Model for Routing Management
       (NMDA Version)";
  }
  import ietf-key-chain {
    prefix key-chain;
    reference
      "RFC8177: YANG Data Model for Key Chains";
  }
  import ietf-netconf-acm {
    prefix nacm;
    reference
      "RFC8341: Network Configuration Access Control Model";
  }
  organization
    "IETF Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact
    "WG Web:   <http://tools.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>

     Editor:   Vishnu Pavan Beeram
               <mailto:vbeeram@juniper.net>

     Editor:   Tarek Saad
               <mailto:tsaad@juniper.net>

     Editor:   Rakesh Gandhi
               <mailto:rgandhi@cisco.com>

     Editor:   Xufeng Liu
               <mailto: xufeng.liu.ietf@gmail.com>

     Editor:   Igor Bryskin
               <mailto:i_bryskin@yahoo.com>";
  description
    "This module contains the RSVP YANG data model.
     The model fully conforms to the Network Management Datastore
     Architecture (NMDA).

     Copyright (c) 2019 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).
     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";

  // RFC Ed.: replace XXXX with actual RFC number and remove this
  // note.
  // RFC Ed.: update the date below with the date of RFC publication
  // and remove this note.

  revision 2023-10-06 {
    description
      "Initial version.";
    reference
      "RFCXXXX: A YANG Data Model for Resource Reservation Protocol
       (RSVP)";
  }

  identity rsvp {
    base rt:routing-protocol;
    description
      "RSVP protocol";
  }

  identity rsvp-session-type {
    description
      "Base RSVP session type";
  }

  identity rsvp-session-ip {
    base rsvp-session-type;
    description
      "RSVP IP session type";
  }

  identity reservation-style {
    description
      "Base identity for reservation style.";
  }

  identity reservation-wildcard-filter {
    base reservation-style;
    description
      "Wildcard-Filter (WF) Style.";
    reference
      "RFC2205";
  }

  identity reservation-fixed-filter {
    base reservation-style;
    description
      "Fixed-Filter (FF) Style.";
    reference
      "RFC2205";
  }

  identity reservation-shared-explicit {
    base reservation-style;
    description
      "Shared Explicit (SE) Style.";
    reference
      "RFC2205";
  }

  grouping intf-attributes {
    description
      "Top level grouping for RSVP interface properties.";
    container refresh-reduction {
      description
        "Top level container for RSVP refresh reduction parameters.";
      leaf enabled {
        type boolean;
        default "true";
        description
          "'true' if RSVP Refresh Reduction is enabled.
           'false' if RSVP Refresh Reduction is disabled.";
      }
      reference
        "RFC2961 RSVP Refresh Overhead Reduction Extensions";
    }
    container hellos {
      description
        "Top level container for RSVP hello parameters.";
      leaf enabled {
        type boolean;
        default "true";
        description
          "'true' if RSVP Hello is enabled.
           'false' if RSVP Hello is disabled.";
      reference
        "RFC3209: RSVP-TE: Extensions to RSVP for LSP Tunnels.
         RFC5495: Description of the Resource Reservation Protocol -
         Traffic-Engineered (RSVP-TE) Graceful Restart Procedures.";
      }
    }
    container authentication {
      description
        "Top level container for RSVP authentication parameters.";
      leaf enabled {
        type boolean;
        default "false";
        description
          "'true' if RSVP Authentication is enabled.
           'false' if RSVP Authentication is disabled.";
      }
      leaf authentication-key {
        type string;
        description
          "An authentication key string.";
        reference
          "RFC2747: RSVP Cryptographic Authentication";
      }
      leaf crypto-algorithm {
        type identityref {
          base key-chain:crypto-algorithm;
        }
        description
          "Cryptographic algorithm associated with key.";
      }
    }
    container statistics {
      config false;
      description
        "RSVP statistics container.";
      container messages {
        description
          "RSVP protocol statistics container.";
        leaf ack-sent {
          type yang:counter64;
          description
            "RSVP Hello sent count.";
        }
        leaf ack-received {
          type yang:counter64;
          description
            "RSVP Hello received count.";
        }
        leaf bundle-sent {
          type yang:counter64;
          description
            "RSVP Bundle message sent count.";
        }
        leaf bundle-received {
          type yang:counter64;
          description
            "RSVP Bundle message received count.";
        }
        leaf hello-sent {
          type yang:counter64;
          description
            "RSVP Hello message sent count.";
        }
        leaf hello-received {
          type yang:counter64;
          description
            "RSVP Hello message received count.";
        }
        leaf integrity-challenge-sent {
          type yang:counter64;
          description
            "RSVP Integrity Challenge message sent count.";
        }
        leaf integrity-challenge-received {
          type yang:counter64;
          description
            "RSVP Integrity Challenge message received count.";
        }
        leaf integrity-response-sent {
          type yang:counter64;
          description
            "RSVP Integrity Response message sent count.";
        }
        leaf integrity-response-received {
          type yang:counter64;
          description
            "RSVP Integrity Response message received count.";
        }
        leaf notify-sent {
          type yang:counter64;
          description
            "RSVP Notify message sent count.";
        }
        leaf notify-received {
          type yang:counter64;
          description
            "RSVP Notify message received count.";
        }
        leaf path-sent {
          type yang:counter64;
          description
            "RSVP Path message sent count.";
        }
        leaf path-received {
          type yang:counter64;
          description
            "RSVP Path message received count.";
        }
        leaf path-err-sent {
          type yang:counter64;
          description
            "RSVP Path error message sent count.";
        }
        leaf path-err-received {
          type yang:counter64;
          description
            "RSVP Path error message received count.";
        }
        leaf path-tear-sent {
          type yang:counter64;
          description
            "RSVP Path tear message sent count.";
        }
        leaf path-tear-received {
          type yang:counter64;
          description
            "RSVP Path tear message received count.";
        }
        leaf resv-sent {
          type yang:counter64;
          description
            "RSVP Resv message sent count.";
        }
        leaf resv-received {
          type yang:counter64;
          description
            "RSVP Resv message received count.";
        }
        leaf resv-confirm-sent {
          type yang:counter64;
          description
            "RSVP Confirm message sent count.";
        }
        leaf resv-confirm-received {
          type yang:counter64;
          description
            "RSVP Confirm message received count.";
        }
        leaf resv-err-sent {
          type yang:counter64;
          description
            "RSVP Resv error message sent count.";
        }
        leaf resv-err-received {
          type yang:counter64;
          description
            "RSVP Resv error message received count.";
        }
        leaf resv-tear-sent {
          type yang:counter64;
          description
            "RSVP Resv tear message sent count.";
        }
        leaf resv-tear-received {
          type yang:counter64;
          description
            "RSVP Resv tear message received count.";
        }
        leaf srefresh-sent {
          type yang:counter64;
          description
            "RSVP Srefresh message sent count.";
        }
        leaf srefresh-received {
          type yang:counter64;
          description
            "RSVP Srefresh message received count.";
        }
        leaf unknown-messages-received {
          type yang:counter64;
          description
            "Unknown messages received count.";
        }
      }
      container packets {
        description
          "Packet statistics container.";
        leaf sent {
          type yang:counter64;
          description
            "RSVP packet sent count.";
        }
        leaf received {
          type yang:counter64;
          description
            "RSVP packet received count.";
        }
      }
      container errors {
        description
          "Error statistics container.";
        leaf authenticate {
          type yang:counter64;
          description
            "The total number of RSVP packets received with an
             authentication failure.";
        }
        leaf checksum {
          type yang:counter64;
          description
            "The total number of RSVP packets received with an invalid
             checksum value.";
        }
        leaf packet-length {
          type yang:counter64;
          description
            "The total number of packets received with an invalid
             packet length.";
        }
      }
    }
  }

  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol" {
    when "rt:type = 'rsvp:rsvp'" {
      description
        "This augment is only valid when routing protocol instance
         type is RSVP.";
    }
    description
      "RSVP protocol augmentation.";
    container rsvp {
      presence "Enable RSVP feature";
      description
        "RSVP feature container";
      container interfaces {
        description
          "RSVP interfaces container.";
        uses intf-attributes;
        list interface {
          key "name";
          description
            "RSVP interfaces.";
          leaf name {
            type if:interface-ref;
            description
              "RSVP interface.";
          }
          uses intf-attributes;
        }
      }
      container sessions {
        description
          "RSVP sessions container.";
        list session-ip {
          key "destination protocol-id destination-port";
          config false;
          description
            "List of RSVP sessions.";
          leaf destination-port {
            type uint16;
            description
              "RSVP destination port.";
            reference
              "RFC2205";
          }
          leaf protocol-id {
            type uint8;
            description
              "The IP protocol ID.";
            reference
              "RFC2205, section 3.2";
          }
          leaf source {
            type inet:ip-address;
            description
              "RSVP source address.";
            reference
              "RFC2205";
          }
          leaf destination {
            type inet:ip-address;
            description
              "RSVP destination address.";
            reference
              "RFC2205";
          }
          leaf session-name {
            type string;
            description
              "The signaled name of this RSVP session.";
          }
          leaf session-status {
            type enumeration {
              enum up {
                description
                  "RSVP session is up.";
              }
              enum down {
                description
                  "RSVP session is down.";
              }
            }
            description
              "Enumeration of RSVP session states.";
          }
          leaf session-type {
            type identityref {
              base rsvp-session-type;
            }
            mandatory "true";
            description
              "RSVP session type.";
          }
          container psbs {
            description
              "Path State Block (PSB) container.";
            list psb {
              description
                "List of Path State Blocks.";
              leaf source-port {
                type inet:port-number;
                description
                  "RSVP source port.";
                reference
                  "RFC2205";
              }
              leaf expires-in {
                type uint32;
                units "seconds";
                description
                  "Time to expiry (in seconds).";
              }
            }
          }
          container rsbs {
            description
              "Reservation State Block (RSB) container.";
            list rsb {
              description
                "List of Reservation State Blocks.";
              leaf source-port {
                type inet:port-number;
                description
                  "RSVP source port.";
                reference
                  "RFC2205";
              }
              leaf reservation-style {
                type identityref {
                  base reservation-style;
                }
                description
                  "RSVP reservation style.";
              }
              leaf expires-in {
                type uint32;
                units "seconds";
                description
                  "Time to expiry (in seconds).";
              }
            }
          }
        }
      }
      container neighbors {
        description
          "RSVP neighbors container";
        list neighbor {
          key "address";
          description
            "List of RSVP neighbors";
          leaf address {
            type inet:ip-address;
            description
              "Address of the RSVP neighbor.";
          }
          leaf epoch {
            type uint32;
            description
              "Neighbor epoch.";
            reference "RFC2961 and RFC5063";
          }
          leaf expiry-time {
            type uint32;
            units "seconds";
            description
              "Neighbor expiry time after which the neighbor state is
               purged if no states associated with it.";
          }
          container graceful-restart {
            description
              "Graceful restart information.";
            leaf neighbor-restart-time {
              type uint32;
              units "seconds";
              config false;
              description
                "Time it takes the neighbor node to restart its RSVP-TE
                 component (to the point where it can exchange RSVP
                 Hello with its neighbors). A value of 0xffffffff
                 indicates that the restart of the neighbor's control plane
                 may occur over an indeterminate interval and that the
                 operation of its data plane is unaffected by control plane
                 failures.";
              reference "RFC3473";
            }
            leaf neighbor-recovery-time {
              type uint32;
              units "seconds";
              config false;
              description
                "The period of time, in milliseconds, that the neighbor
                 node requires to re-synchronize RSVP and MPLS
                 forwarding state with its neighbor. A value of zero (0)
                 indicates that MPLS forwarding state was not preserved
                 across a particular reboot.";
              reference "RFC3473";
            }
            container helper-mode {
              config false;
              description
                "Helper mode information.";
              leaf neighbor-restart-time-remaining {
                type uint32;
                units "seconds";
                description
                  "Number of seconds remaining for neighbor to send Hello
                   message after restart.";
                reference "RFC5063";
              }
              leaf neighbor-recovery-time-remaining {
                type uint32;
                units "seconds";
                description
                  "Number of seconds remaining for neighbor to refresh.";
                reference "RFC5063";
              }
            }
            // helper-mode
          }
          leaf hello-status {
            type enumeration {
              enum enabled {
                description
                  "RSVP Hellos enabled.";
              }
              enum disabled {
                description
                  "RSVP Hellos disabled.";
              }
              enum restarting {
                description
                  "RSVP restarting.";
              }
            }
            config false;
            description
              "RSVP Hello status.";
          }
          leaf interface {
            type if:interface-ref;
            description
              "Interface where RSVP neighbor was detected.";
          }
          leaf neighbor-status {
            type enumeration {
              enum up {
                description
                  "Neighbor state up.";
              }
              enum down {
                description
                  "Neighbor state down.";
              }
              enum hello-disable {
                description
                  "RSVP Hellos disabled.";
              }
              enum restarting {
                description
                  "RSVP neighbor restarting.";
              }
            }
            config false;
            description
              "RSVP neighbor state.";
          }
          leaf refresh-reduction-capable {
            type boolean;
            default "true";
            description
              "Enables all RSVP refresh reduction message bundling, RSVP
               message ID, reliable message delivery and Srefresh
               messages.";
            reference
              "RFC2961 RSVP Refresh Overhead Reduction Extensions";
          }
          leaf restart-count {
            type yang:counter32;
            config false;
            description
              "Number of times this RSVP neighbor has restarted.";
          }
          leaf restart-time {
            type yang:date-and-time;
            config false;
            description
              "Last restart time of the RSVP neighbor.";
            reference "RFC3473";
          }
        }
      }
      container graceful-restart {
        description
          "Graceful restart local information.";
        leaf enabled {
          type boolean;
          description
            "'true' if RSVP Graceful Restart is enabled.
             'false' if RSVP Graceful Restart is disabled.";
          reference "RFC5495";
        }
        leaf local-restart-time {
          type uint32;
          units "seconds";
          description
            "Time it takes the local node to restart its RSVP-TE
             component (to the point where it can exchange RSVP
             Hello with its neighbors). A value of 0xffffffff
             indicates that the restart of the neighbor's control plane
             may occur over an indeterminate interval and that the
             operation of its data plane is unaffected by control plane
             failures.";
          reference "RFC3473";
        }
        leaf local-recovery-time {
          type uint32;
          units "seconds";
          description
            "The period of time, in seconds, that the local
             node requires to re-synchronize RSVP and MPLS
             forwarding state with its neighbor. A value of zero (0)
             indicates that MPLS forwarding state was not preserved
             across a particular reboot.";
          reference "RFC3473";
        }
        container helper-mode {
          description
            "Helper mode information. In this mode, the node
             resynchronizes its stored states with a neighbor whose
             control plane has restarted. The helper mode term is
             borrowed from RFC3623 and adopted by several vendors
             vendors in their implementation of RSVP graceful restart.";
          leaf enabled {
            type boolean;
            description
              "'true' if helper mode is enabled.";
          }
          leaf max-helper-restart-time {
            type uint32;
            units "seconds";
            default "20";
            description
              "The maximum time the router or switch waits after it
               discovers that the neighboring router has gone down
               before it declares the neighbor down.";
            reference "RFC5063";
          }
          leaf max-helper-recovery-time {
            type uint32;
            units "seconds";
            default "180";
            description
              "The maximum amount of time the router retains the state
               of its RSVP neighbors while they undergo a graceful
               restart.";
            reference "RFC5063";
          }
        }
      }
    }
  }

  grouping session-ref {
    description
      "Session reference information";
    leaf destination {
      type leafref {
        path "/rt:routing/rt:control-plane-protocols"
           + "/rt:control-plane-protocol/rsvp:rsvp"
           + "/rsvp:sessions/rsvp:session-ip/destination";
      }
      mandatory true;
      description
        "The RSVP session destination.";
    }
    leaf protocol-id {
      type uint8;
      mandatory true;
      description
        "The RSVP session protocol ID.";
    }
    leaf destination-port {
      type inet:ip-address;
      mandatory true;
      description
        "The RSVP session destination port.";
    }
  }

  rpc clear-session {
    nacm:default-deny-all;
    description
      "Clears RSVP sessions RPC";
    input {
      leaf routing-protocol-instance-name {
        type leafref {
          path "/rt:routing/rt:control-plane-protocols/"
             + "rt:control-plane-protocol/rt:name";
        }
        mandatory true;
        description
          "Name of the RSVP protocol instance whose session
           is being cleared.

           If the corresponding RSVP instance doesn't exist,
           then the operation will fail with an error-tag of
           'data-missing' and an error-app-tag of
           'routing-protocol-instance-not-found'.";
      }
      choice filter-type {
        mandatory true;
        description
          "Filter choice";
        case match-all {
          leaf all {
            type empty;
            mandatory true;
            description
              "Match all RSVP sessions.";
          }
        }
        case match-one {
          container session-info {
            description
              "Specifies the specific session to invoke the operation
               on.";
            choice session-type {
              mandatory true;
              description
                "The RSVP session type.";
              case rsvp-session-ip {
                uses session-ref;
              }
            }
          }
        }
      }
    }
  }

  rpc clear-neighbor {
    nacm:default-deny-all;
    description
      "RPC to clear the RSVP Hello session to a neighbor.";
    input {
      leaf routing-protocol-instance-name {
        type leafref {
          path "/rt:routing/rt:control-plane-protocols/"
             + "rt:control-plane-protocol/rt:name";
        }
        mandatory true;
        description
          "Name of the RSVP protocol instance whose session
           is being cleared.

           If the corresponding RSVP instance doesn't exist,
           then the operation will fail with an error-tag of
           'data-missing' and an error-app-tag of
           'routing-protocol-instance-not-found'.";
      }
      choice filter-type {
        mandatory true;
        description
          "The Filter choice.";
        case match-all {
          leaf all {
            type empty;
            mandatory true;
            description
              "Match all RSVP neighbor sessions.";
          }
        }
        case match-one {
          leaf neighbor-address {
            type leafref {
              path "/rt:routing/rt:control-plane-protocols"
                 + "/rt:control-plane-protocol/rsvp:rsvp"
                 + "/rsvp:neighbors/rsvp:neighbor/address";
            }
            mandatory true;
            description
              "Match the specific RSVP neighbor session.";
          }
        }
      }
    }
  }

  rpc clear-authentication {
    nacm:default-deny-all;
    description
      "Clears the RSVP Security Association (SA) before the
       lifetime expires.";
    input {
      leaf routing-protocol-instance-name {
        type leafref {
          path "/rt:routing/rt:control-plane-protocols/"
             + "rt:control-plane-protocol/rt:name";
        }
        mandatory true;
        description
          "Name of the RSVP protocol instance whose session
           is being cleared.

           If the corresponding RSVP instance doesn't exist,
           then the operation will fail with an error-tag of
           'data-missing' and an error-app-tag of
           'routing-protocol-instance-not-found'.";
      }
      choice filter-type {
        mandatory true;
        description
          "Filter choice";
        case match-all {
          leaf all {
            type empty;
            mandatory true;
            description
              "Match all RSVP security associations.";
          }
        }
        case match-one-interface {
          leaf interface {
            type if:interface-ref;
            description
              "Interface where RSVP security association(s) to be
               detected.";
          }
        }
      }
    }
  }
}
<CODE ENDS>
]]></artwork></figure>

</section>
</section>
<section anchor="rsvp-extended-yang-model"><name>RSVP Extended YANG Model</name>

<t>The RSVP extended module augments the RSVP base module with optional feature data
as described in <xref target="OptionalFeatures"/>.</t>

<section anchor="tree-diagram-1"><name>Tree Diagram</name>

<t><xref target="fig-rsvp-extended"/> shows the YANG tree representation for configuration and
state data that are covered in 'ietf-rsvp-extended' YANG module:</t>

<figure title="RSVP extended module tree diagram" anchor="fig-rsvp-extended"><artwork><![CDATA[
module: ietf-rsvp-extended

  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp
            /rsvp:graceful-restart:
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces:
    +--rw refresh-interval?        uint32
    +--rw refresh-misses?          uint32
    +--rw checksum-enable?         empty
    +--rw patherr-state-removal?   empty
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces
            /rsvp:statistics/rsvp:packets:
    +--ro discontinuity-time?   yang:date-and-time
    +--ro out-dropped?          yang:counter64
    +--ro in-dropped?           yang:counter64
    +--ro out-errors?           yang:counter64
    +--ro in-errors?            yang:counter64
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces
            /rsvp:refresh-reduction:
    +--rw bundle-message-max-size?    uint32
    +--rw ack-hold-time?              uint32
    +--rw ack-max-size?               uint32
    +--rw ack-retransmit-time?        uint32
    +--rw srefresh-ack-desired?       empty
    +--rw srefresh-max-size?          uint32
    +--rw srefresh-relative-period?   uint8
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces
            /rsvp:hellos:
    +--rw interface-based?   empty
    +--rw hello-interval?    uint32
    +--rw hello-misses?      uint32
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces
            /rsvp:authentication:
    +--rw lifetime?      uint32
    +--rw window-size?   uint32
    +--rw challenge?     empty
    +--rw retransmits?   uint32
    +--rw key-chain?     key-chain:key-chain-ref
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces
            /rsvp:interface:
    +--rw refresh-interval?        uint32
    +--rw refresh-misses?          uint32
    +--rw checksum-enable?         empty
    +--rw patherr-state-removal?   empty
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces
            /rsvp:interface/rsvp:statistics/rsvp:packets:
    +--ro discontinuity-time?   yang:date-and-time
    +--ro out-dropped?          yang:counter64
    +--ro in-dropped?           yang:counter64
    +--ro out-errors?           yang:counter64
    +--ro in-errors?            yang:counter64
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces
            /rsvp:interface/rsvp:refresh-reduction:
    +--rw bundle-message-max-size?    uint32
    +--rw ack-hold-time?              uint32
    +--rw ack-max-size?               uint32
    +--rw ack-retransmit-time?        uint32
    +--rw srefresh-ack-desired?       empty
    +--rw srefresh-max-size?          uint32
    +--rw srefresh-relative-period?   uint8
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces
            /rsvp:interface/rsvp:hellos:
    +--rw interface-based?   empty
    +--rw hello-interval?    uint32
    +--rw hello-misses?      uint32
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces
            /rsvp:interface/rsvp:authentication:
    +--rw lifetime?      uint32
    +--rw window-size?   uint32
    +--rw challenge?     empty
    +--rw retransmits?   uint32
    +--rw key-chain?     key-chain:key-chain-ref
]]></artwork></figure>

</section>
<section anchor="yang-module"><name>YANG Module</name>

<t>The 'ietf-rsvp-extended' module imports from the following modules:</t>

<t><list style="symbols">
  <t>ietf-rsvp defined in this document</t>
  <t>ietf-routing defined in <xref target="RFC8349"/></t>
  <t>ietf-yang-types and ietf-inet-types defined in <xref target="RFC6991"/></t>
  <t>ietf-key-chain defined in <xref target="RFC8177"/></t>
</list></t>

<t><xref target="fig-rsvp-extended-mod"/> shows the RSVP extended YANG module:</t>

<t>This module also references the following documents:
<xref target="RFC3473"/>, <xref target="RFC2747"/>, <xref target="RFC3209"/>, <xref target="RFC2205"/>, <xref target="RFC2961"/>, and <xref target="RFC5495"/>.</t>

<figure title="RSVP extended YANG module" anchor="fig-rsvp-extended-mod"><artwork><![CDATA[
<CODE BEGINS> file "ietf-rsvp-extended@2021-12-02.yang"
module ietf-rsvp-extended {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-rsvp-extended";
  prefix rsvp-extended;

  import ietf-rsvp {
    prefix rsvp;
    reference
      "RFCXXXX: A YANG Data Model for Resource Reservation Protocol
       (RSVP)";
  }
  import ietf-routing {
    prefix rt;
    reference
      "RFC8349: A YANG Data Model for Routing Management
       (NMDA Version)";
  }
  import ietf-yang-types {
    prefix yang;
    reference
      "RFC6991: Common YANG Data Types";
  }
  import ietf-key-chain {
    prefix key-chain;
    reference
      "RFC8177: YANG Data Model for Key Chains";
  }

  organization
    "IETF Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact
    "WG Web:   <http://tools.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>

     Editor:   Vishnu Pavan Beeram
               <mailto:vbeeram@juniper.net>

     Editor:   Tarek Saad
               <mailto:tsaad@juniper.net>

     Editor:   Rakesh Gandhi
               <mailto:rgandhi@cisco.com>

     Editor:   Xufeng Liu
               <mailto: xufeng.liu.ietf@gmail.com>

     Editor:   Igor Bryskin
               <mailto:i_bryskin@yahoo.com>";
  description
    "This module contains the Extended RSVP YANG data model.
     The model fully conforms to the Network Management Datastore
     Architecture (NMDA).

     Copyright (c) 2019 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).
     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";

  // RFC Ed.: replace XXXX with actual RFC number and remove this
  // note.
  // RFC Ed.: update the date below with the date of RFC publication
  // and remove this note.

  revision 2021-12-02 {
    description
      "Initial version.";
    reference
      "RFCXXXX: A YANG Data Model for Resource Reservation Protocol
       (RSVP)";
  }

  grouping authentication-extended {
    description
      "Configuration parameters relating to RSVP authentication.";
    leaf lifetime {
      type uint32 {
        range "30..86400";
      }
      units "seconds";
      default "30";
      description
        "Life time for each security association.";
      reference
        "RFC2747: RSVP Cryptographic Authentication";
    }
    leaf window-size {
      type uint32 {
        range "1..64";
      }
      default "2";
      description
        "Window-size to limit number of out-of-order messages.";
      reference
        "RFC2747: RSVP Cryptographic Authentication";
    }
    leaf challenge {
      type empty;
      description
        "Enable challenge messages.";
      reference
        "RFC2747: RSVP Cryptographic Authentication";
    }
    leaf retransmits {
      type uint32 {
        range "1..10000";
      }
      default "1";
      description
        "Number of retransmits when messages are dropped.";
      reference
        "RFC2747: RSVP Cryptographic Authentication";
    }
    leaf key-chain {
      type key-chain:key-chain-ref;
      description
        "Key chain name to authenticate RSVP
         signaling messages.";
      reference
        "RFC2747: RSVP Cryptographic Authentication";
    }
  }

  grouping hellos-extended {
    description
      "Configuration parameters relating to RSVP hellos";
    leaf interface-based {
      type empty;
      description
        "Enable interface-based Hello adjacency if present.";
    }
    leaf hello-interval {
      type uint32;
      units "milliseconds";
      default "9000";
      description
        "Configure interval between successive Hello messages in
         milliseconds.";
      reference
        "RFC3209: RSVP-TE: Extensions to RSVP for LSP Tunnels.
         RFC5495: Description of the Resource Reservation Protocol -
         Traffic-Engineered (RSVP-TE) Graceful Restart Procedures.";
    }
    leaf hello-misses {
      type uint32 {
        range "1..10";
      }
      default "3";
      description
        "Configure max number of consecutive missed Hello messages.";
      reference
        "RFC3209: RSVP-TE: Extensions to RSVP for LSP Tunnels.
         RFC5495: Description of the Resource Reservation Protocol -
         Traffic- Engineered (RSVP-TE) Graceful Restart Procedures.";
    }
  }

  grouping signaling-parameters-extended {
    description
      "Configuration parameters relating to RSVP signaling";
    leaf refresh-interval {
      type uint32;
      units "seconds";
      default "30";
      description
        "Set interval between successive refreshes";
      reference "RFC2205";
    }
    leaf refresh-misses {
      type uint32;
      default "9";
      description
        "Set max number of consecutive missed messages for state
         expiry";
      reference "RFC2205";
    }
    leaf checksum-enable {
      type empty;
      description
        "Enable RSVP message checksum computation";
      reference "RFC2205";
    }
    leaf patherr-state-removal {
      type empty;
      description
        "State-Removal flag in Path Error message if present.";
      reference "RFC3473";
    }
  }

  grouping refresh-reduction-extended {
    description
      "Configuration parameters relating to RSVP refresh reduction.";
    leaf bundle-message-max-size {
      type uint32 {
        range "512..65000";
      }
      default "1500";
      description
        "Configure maximum size (bytes) of a single RSVP Bundle
         message.";
      reference "RFC2961";
    }
    leaf ack-hold-time {
      type uint32;
      units "milliseconds";
      default "9000";
      description
        "Configure hold time in milliseconds for sending RSVP ACK
         message(s).";
      reference "RFC2961";
    }
    leaf ack-max-size {
      type uint32;
      default "1500";
      description
        "Configure max size of a single RSVP ACK message.";
      reference "RFC2961";
    }
    leaf ack-retransmit-time {
      type uint32;
      units "milliseconds";
      default "500";
      description
        "Configure min delay in milliseconds to wait for an
         acknowledgment before being retransmitted.";
      reference "RFC2961";
    }
    leaf srefresh-ack-desired {
      type empty;
      description
        "Enables the sending of MESSAGE_ID with ACK_Desired
         set with Srefresh messages.";
      reference "RFC2961";
    }
    leaf srefresh-max-size {
      type uint32 {
        range "20..65000";
      }
      default "1500";
      description
        "Configure max size (bytes) of a single RSVP Srefresh
         message.";
      reference "RFC2961";
    }
    leaf srefresh-relative-period {
      type uint8 {
        range "10..100";
      }
      description
        "Configures the period of Srefreshes relative to standard
         refresh message period in percentage.";
    }
  }

  grouping packets-extended-statistics {
    description
      "Packet statistics.";
    leaf discontinuity-time {
      type yang:date-and-time;
      description
        "The time on the most recent occasion at which any one or
         more of the statistic counters suffered a discontinuity.
         If no such discontinuities have occurred since the last
         re-initialization of the local management subsystem, then
         this node contains the time the local management subsystem
         re-initialized itself.";
    }
    leaf out-dropped {
      type yang:counter64;
      description
        "Out RSVP packet drop count.";
    }
    leaf in-dropped {
      type yang:counter64;
      description
        "In RSVP packet drop count.";
    }
    leaf out-errors {
      type yang:counter64;
      description
        "Out RSVP packet errors count.";
    }
    leaf in-errors {
      type yang:counter64;
      description
        "In RSVP packet rx errors count.";
    }
  }

  /**
   * RSVP extensions augmentations
   */

  /**
   * RSVP all interfaces extensions
   */

  /* RSVP interface signaling extensions */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces" {
    description
      "RSVP signaling all interfaces configuration extensions";
    uses signaling-parameters-extended;
  }

  /* Packet statistics extension */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces/"
        + "rsvp:statistics/rsvp:packets" {
    description
      "RSVP packets all interfaces configuration extensions";
    uses packets-extended-statistics;
  }

  /* RSVP refresh reduction extension */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces/"
        + "rsvp:refresh-reduction" {
    description
      "RSVP refresh-reduction all interface configuration
       extensions";
    uses refresh-reduction-extended;
  }

  /* RSVP hellos extension */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces/"
        + "rsvp:hellos" {
    description
      "RSVP hello all interfaces configuration extensions";
    uses hellos-extended;
  }

  /* RSVP authentication extension */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces/"
        + "rsvp:authentication" {
    description
      "RSVP authentication all interfaces configuration extensions";
    uses authentication-extended;
  }

  /**
   * RSVP per interface extensions
   */
  /* RSVP interface signaling extensions */

  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces/"
        + "rsvp:interface" {
    description
      "RSVP signaling interface configuration extensions";
    uses signaling-parameters-extended;
  }

  /* Packet statistics extension */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces/"
        + "rsvp:interface/rsvp:statistics/rsvp:packets" {
    description
      "RSVP packet stats extensions";
    uses packets-extended-statistics;
  }

  /* RSVP refresh reduction extension */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces/"
        + "rsvp:interface/rsvp:refresh-reduction" {
    description
      "RSVP refresh-reduction interface configuration extensions";
    uses refresh-reduction-extended;
  }

  /* RSVP hellos extension */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces/"
        + "rsvp:interface/rsvp:hellos" {
    description
      "RSVP hello interface configuration extensions";
    uses hellos-extended;
  }

  /* RSVP authentication extension */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces/"
        + "rsvp:interface/rsvp:authentication" {
    description
      "RSVP authentication interface configuration extensions";
    uses authentication-extended;
  }
}
<CODE ENDS>
]]></artwork></figure>

</section>
</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document registers the following URIs in the IETF XML registry
<xref target="RFC3688"/>.  Following the format in <xref target="RFC3688"/>, the following registration
is requested to be made.</t>

<figure><artwork><![CDATA[
   URI: urn:ietf:params:xml:ns:yang:ietf-rsvp
   Registrant Contact:  The IESG.
   XML: N/A, the requested URI is an XML namespace.

   URI: urn:ietf:params:xml:ns:yang:ietf-rsvp-extended
   Registrant Contact:  The IESG.
   XML: N/A, the requested URI is an XML namespace.
]]></artwork></figure>

<t>This document registers two YANG modules in the YANG Module Names
registry <xref target="RFC6020"/>.</t>

<figure><artwork><![CDATA[
   name:       ietf-rsvp
   namespace:  urn:ietf:params:xml:ns:yang:ietf-rsvp
   prefix:     rsvp
   reference:  RFCXXXX

   name:       ietf-rsvp-extended
   namespace:  urn:ietf:params:xml:ns:yang:ietf-rsvp-extended
   prefix:     rsvp-extended
   reference:  RFCXXXX
]]></artwork></figure>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>The YANG module specified in this document defines a schema for data that is
designed to be accessed via network management protocols such as NETCONF
<xref target="RFC6241"/> or RESTCONF <xref target="RFC8040"/>. The lowest NETCONF layer is the secure
transport layer, and the mandatory-to-implement secure transport is Secure
Shell (SSH) <xref target="RFC6242"/>.  The lowest RESTCONF layer is HTTPS, and the
mandatory-to-implement secure transport is TLS <xref target="RFC8446"/>.</t>

<t>The Network Configuration Access Control Model (NACM) <xref target="RFC8341"/> provides the
means to restrict access for particular NETCONF or RESTCONF users to a
preconfigured subset of all available NETCONF or RESTCONF protocol operations
and content.</t>

<t>There are a number of data nodes defined in the YANG module(s) defined in this
document that are writable/creatable/deletable (i.e., config true, which is the
default).  These data nodes may be considered sensitive or vulnerable in some
network environments.  Write operations (e.g., &lt;edit-config&gt;) to these data
nodes without proper protection can have a negative effect on network
operations. These are the subtrees and data nodes and their sensitivity/vulnerability:</t>

<t>/rt:routing/rt:control-plane-protocols/rt:control-plane-protocol/rsvp:rsvp/
    /rsvp:globals
    /rsvp:interfaces
    /rsvp:sessions</t>

<ul empty="true"><li>
  <t>All of which are considered sensitive and if access to either of these is
compromised, it can result in temporary network outages or be employed to
mount DoS attacks.</t>
</li></ul>

<t>Some of the readable data nodes in this YANG module may be considered sensitive
or vulnerable in some network environments. It is thus important to control
read access (e.g., via get, get-config, or notification) to these data nodes.
These are the subtrees and data nodes and their sensitivity/vulnerability:</t>

<t>/rt:routing/rt:control-plane-protocols/rt:control-plane-protocol/rsvp:rsvp/
    /rsvp:globals
    /rsvp:interfaces
    /rsvp:sessions</t>

<ul empty="true"><li>
  <t>Additional information from these state data nodes can be inferred with respect
to the network topology, and device location and subsequently be used to mount
other attacks in the network.</t>
</li></ul>

<t>For RSVP authentication, the configuration supported is via the specification of
key-chains <xref target="RFC8177"/> or the direct specification of key and authentication
algorithm, and hence security considerations of <xref target="RFC8177"/> are inherited.  This
includes the considerations with respect to the local storage and handling of
authentication keys.</t>

<t>Some of the RPC operations defined in this YANG module may be considered
sensitive or vulnerable in some network environments.  It is thus
important to control access to these operations.  The RSVP YANG
module support the "clear-session" and "clear-neighbor" RPCs.  If
access to either of these is compromised, they can result in
temporary network outages be employed to mount DoS attacks.</t>

<t>The security considerations spelled out in the YANG 1.1 specification
<xref target="RFC7950"/> apply for this document as well.</t>

</section>
<section anchor="acknowledgement"><name>Acknowledgement</name>

<t>The authors would like to thank Tom Petch for reviewing and providing useful
feedback about the document. The authors would also like to thank Lou Berger
for reviewing and providing valuable feedback on this document.</t>

</section>
<section anchor="appendix-a"><name>Appendix A</name>

<t>A simple network setup is shown in {fig-example title}.  R1 runs the RSVP routing
protocol on both interfaces 'ge0/0/0/1', and 'ge0/0/0/2'.</t>

<figure title="Example of network configuration." anchor="fig-example"><artwork><![CDATA[
State on R1:

Sessions:
=========
Destination         Protocol-ID Dest-port 
198.51.100.1        10          10 

Neighbors:
==========
Neighbor Address    Interface
192.0.2.6           ge0/0/0/1

                               192.0.2.5/30
                              ge0/0/0/1
                              +---
                             /
                        +-----+
                        | R1  |
                        +-----+
                             \
                              +---
                              ge0/0/0/2
                               192.0.2.13/30

]]></artwork></figure>

<t>The instance data tree could then be as follows:</t>

<figure title="Example RSVP JSON encoded data instance tree." anchor="fig-instance-tree"><artwork><![CDATA[
{
  "ietf-routing:routing": {
    "control-plane-protocols": {
      "control-plane-protocol": [
        {
          "type": "rt:routing-protocol",
          "name": "rsvp:rsvp",
          "ietf-rsvp:rsvp": {
            "interfaces": {
              "refresh-reduction": {
                "enabled": true,
                "ietf-rsvp-extended:bundle-message-max-size": 2000,
                "ietf-rsvp-extended:reliable-ack-hold-time": 180,
                "ietf-rsvp-extended:reliable-ack-max-size": 2000,
                "ietf-rsvp-extended:reliable-retransmit-time": 180,
                "ietf-rsvp-extended:reliable-srefresh": [
                  null
                ],
                "ietf-rsvp-extended:summary-max-size": 2000
              },
              "hellos": {
                "enabled": true,
                "ietf-rsvp-extended:interface-based": [
                  null
                ],
                "ietf-rsvp-extended:hello-interval": 27000,
                "ietf-rsvp-extended:hello-misses": 3
              },
              "statistics": {
                "messages": {
                  "ack-sent": "777",
                  "ack-received": "4840",
                  "bundle-sent": "2195",
                  "bundle-received": "293",
                  "hello-sent": "2516",
                  "hello-received": "3535",
                  "integrity-challenge-sent": "2737",
                  "integrity-challenge-received": "2330",
                  "integrity-response-sent": "895",
                  "integrity-response-received": "1029",
                  "path-sent": "1197",
                  "path-received": "3568",
                  "path-err-sent": "4658",
                  "path-err-received": "695",
                  "path-tear-sent": "3706",
                  "path-tear-received": "2604",
                  "resv-sent": "3353",
                  "resv-received": "3129",
                  "resv-err-sent": "1787",
                  "resv-err-received": "3205",
                  "resv-tear-sent": "4465",
                  "resv-tear-received": "3056",
                  "summary-refresh-sent": "655",
                  "summary-refresh-received": "3856"
                },
                "packets": {
                  "sent": "2147",
                  "received": "4374",
                  "ietf-rsvp-extended:discontinuity-time":
                  "2015-10-24T17:11:27+02:00",
                  "ietf-rsvp-extended:out-dropped": "2696",
                  "ietf-rsvp-extended:in-dropped": "941",
                  "ietf-rsvp-extended:out-errors": "19",
                  "ietf-rsvp-extended:in-errors": "2732"
                },
                "errors": {
                  "authenticate": "2540",
                  "checksum": "2566",
                  "packet-length": "267"
                }
              },
              "interface": [
                {
                  "interface": "ge0/0/0/1",
                  "statistics": {
                    "messages": {
                      "ack-sent": "2747",
                      "ack-received": "4934",
                      "bundle-sent": "1618",
                      "bundle-received": "3668",
                      "hello-sent": "4288",
                      "hello-received": "1194",
                      "integrity-challenge-sent": "4850",
                      "integrity-challenge-received": "3979",
                      "integrity-response-sent": "479",
                      "integrity-response-received": "1773",
                      "path-sent": "2230",
                      "path-received": "1793",
                      "path-err-sent": "465",
                      "path-err-received": "1859",
                      "path-tear-sent": "923",
                      "path-tear-received": "3924",
                      "resv-sent": "3203",
                      "resv-received": "2507",
                      "resv-err-sent": "1259",
                      "resv-err-received": "2445",
                      "resv-tear-sent": "3045",
                      "resv-tear-received": "4676",
                      "summary-refresh-sent": "365",
                      "summary-refresh-received": "2129"
                    },
                    "packets": {
                      "sent": "847",
                      "received": "3114",
                      "ietf-rsvp-extended:discontinuity-time":
                      "2015-10-24T17:11:27+02:00",
                      "ietf-rsvp-extended:out-dropped": "1841",
                      "ietf-rsvp-extended:in-dropped": "4832",
                      "ietf-rsvp-extended:out-errors": "1334",
                      "ietf-rsvp-extended:in-errors": "3900"
                    },
                    "errors": {
                      "authenticate": "3494",
                      "checksum": "4374",
                      "packet-length": "2456"
                    }
                  }
                },
                {
                  "interface": "ge0/0/0/2",
                  "statistics": {
                    "messages": {
                      "ack-sent": "1276",
                      "ack-received": "2427",
                      "bundle-sent": "4053",
                      "bundle-received": "3509",
                      "hello-sent": "3261",
                      "hello-received": "2863",
                      "integrity-challenge-sent": "4744",
                      "integrity-challenge-received": "3554",
                      "integrity-response-sent": "3155",
                      "integrity-response-received": "169",
                      "path-sent": "3853",
                      "path-received": "409",
                      "path-err-sent": "4227",
                      "path-err-received": "2830",
                      "path-tear-sent": "1742",
                      "path-tear-received": "3344",
                      "resv-sent": "3154",
                      "resv-received": "3492",
                      "resv-err-sent": "3112",
                      "resv-err-received": "3974",
                      "resv-tear-sent": "3657",
                      "resv-tear-received": "533",
                      "summary-refresh-sent": "4036",
                      "summary-refresh-received": "2123"
                    },
                    "packets": {
                      "sent": "473",
                      "received": "314",
                      "ietf-rsvp-extended:discontinuity-time":
                      "2015-10-24T17:11:27+02:00",
                      "ietf-rsvp-extended:out-dropped": "2042",
                      "ietf-rsvp-extended:in-dropped": "90",
                      "ietf-rsvp-extended:out-errors": "1210",
                      "ietf-rsvp-extended:in-errors": "1361"
                    },
                    "errors": {
                      "authenticate": "543",
                      "checksum": "2241",
                      "packet-length": "480"
                    }
                  }
                }
              ],
              "ietf-rsvp-extended:refresh-interval": 30,
              "ietf-rsvp-extended:refresh-misses": 5,
              "ietf-rsvp-extended:checksum_enabled": true,
              "ietf-rsvp-extended:patherr-state-removal": [
                null
              ]
            },
            "sessions": {
              "session-ip": [
                {
                  "destination-port": 10,
                  "protocol-id": 10,
                  "destination": "198.51.100.1",
                  "psbs": {
                    "psb": [
                      {
                        "source-port": 10,
                        "expires-in": 100
                      }
                    ]
                  },
                  "rsbs": {
                    "rsb": [
                      {
                        "source-port": 10,
                        "reservation-style":
                        "rsvp:reservation-wildcard-filter",
                        "expires-in": 100
                      }
                    ]
                  }
                }
              ]
            },
            "neighbors": {
              "neighbor": [
                {
                  "address": "192.0.2.6",
                  "epoch": 130,
                  "expiry-time": 260,
                  "graceful-restart": {
                    "enabled": true,
                    "local-restart-time": 271,
                    "local-recovery-time": 138,
                    "neighbor-restart-time": 341,
                    "neighbor-recovery-time": 342
                  },
                  "hello-status": "enabled",
                  "interface": "ge0/0/0/1",
                  "restart-count": 2,
                  "restart-time": "2015-10-24T17:11:27+02:00"
                }
              ]
            },
            "graceful-restart": {
              "enabled": true,
              "local-restart-time": 60,
              "local-recovery-time": 180,
              "neighbor-restart-time": 80,
              "neighbor-recovery-time": 200,
              "helper-mode": {
                "enabled": true
              }
            }
          }
        }
      ]
    }
  }
}
]]></artwork></figure>

</section>
<section anchor="contributors"><name>Contributors</name>

<figure><artwork><![CDATA[

   Himanshu Shah
   Ciena

   Email: hshah@ciena.com


   Xia Chen
   Huawei Technologies

   Email: jescia.chenxia@huawei.com


   Raqib Jones
   Brocade

   Email: raqib@Brocade.com


   Bin Wen
   Comcast

   Email: Bin_Wen@cable.comcast.com

]]></artwork></figure>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>

<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname='B. Leiba' initials='B.' surname='Leiba'/>
    <date month='May' year='2017'/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='8174'/>
  <seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference anchor='RFC6020' target='https://www.rfc-editor.org/info/rfc6020'>
<front>
<title>YANG - A Data Modeling Language for the Network Configuration Protocol (NETCONF)</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='October' year='2010'/>
<abstract><t>YANG is a data modeling language used to model configuration and state data manipulated by the Network Configuration Protocol (NETCONF), NETCONF remote procedure calls, and NETCONF notifications. [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6020'/>
<seriesInfo name='DOI' value='10.17487/RFC6020'/>
</reference>



<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC6991' target='https://www.rfc-editor.org/info/rfc6991'>
<front>
<title>Common YANG Data Types</title>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<date month='July' year='2013'/>
<abstract><t>This document introduces a collection of common data types to be used with the YANG data modeling language.  This document obsoletes RFC 6021.</t></abstract>
</front>
<seriesInfo name='RFC' value='6991'/>
<seriesInfo name='DOI' value='10.17487/RFC6991'/>
</reference>

<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
  <front>
    <title>The YANG 1.1 Data Modeling Language</title>
    <author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'/>
    <date month='August' year='2016'/>
    <abstract>
      <t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols. This document describes the syntax and semantics of version 1.1 of the YANG language. YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification. There are a small number of backward incompatibilities from YANG version 1. This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='7950'/>
  <seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>

<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
  <front>
    <title>RESTCONF Protocol</title>
    <author fullname='A. Bierman' initials='A.' surname='Bierman'/>
    <author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'/>
    <author fullname='K. Watsen' initials='K.' surname='Watsen'/>
    <date month='January' year='2017'/>
    <abstract>
      <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8040'/>
  <seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>

<reference anchor='RFC8343' target='https://www.rfc-editor.org/info/rfc8343'>
  <front>
    <title>A YANG Data Model for Interface Management</title>
    <author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'/>
    <date month='March' year='2018'/>
    <abstract>
      <t>This document defines a YANG data model for the management of network interfaces. It is expected that interface-type-specific data models augment the generic interfaces data model defined in this document. The data model includes definitions for configuration and system state (status information and counters for the collection of statistics).</t>
      <t>The YANG data model in this document conforms to the Network Management Datastore Architecture (NMDA) defined in RFC 8342.</t>
      <t>This document obsoletes RFC 7223.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8343'/>
  <seriesInfo name='DOI' value='10.17487/RFC8343'/>
</reference>

<reference anchor='RFC8349' target='https://www.rfc-editor.org/info/rfc8349'>
  <front>
    <title>A YANG Data Model for Routing Management (NMDA Version)</title>
    <author fullname='L. Lhotka' initials='L.' surname='Lhotka'/>
    <author fullname='A. Lindem' initials='A.' surname='Lindem'/>
    <author fullname='Y. Qu' initials='Y.' surname='Qu'/>
    <date month='March' year='2018'/>
    <abstract>
      <t>This document specifies three YANG modules and one submodule. Together, they form the core routing data model that serves as a framework for configuring and managing a routing subsystem. It is expected that these modules will be augmented by additional YANG modules defining data models for control-plane protocols, route filters, and other functions. The core routing data model provides common building blocks for such extensions -- routes, Routing Information Bases (RIBs), and control-plane protocols.</t>
      <t>The YANG modules in this document conform to the Network Management Datastore Architecture (NMDA). This document obsoletes RFC 8022.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8349'/>
  <seriesInfo name='DOI' value='10.17487/RFC8349'/>
</reference>

<reference anchor='RFC8294' target='https://www.rfc-editor.org/info/rfc8294'>
  <front>
    <title>Common YANG Data Types for the Routing Area</title>
    <author fullname='X. Liu' initials='X.' surname='Liu'/>
    <author fullname='Y. Qu' initials='Y.' surname='Qu'/>
    <author fullname='A. Lindem' initials='A.' surname='Lindem'/>
    <author fullname='C. Hopps' initials='C.' surname='Hopps'/>
    <author fullname='L. Berger' initials='L.' surname='Berger'/>
    <date month='December' year='2017'/>
    <abstract>
      <t>This document defines a collection of common data types using the YANG data modeling language. These derived common types are designed to be imported by other modules defined in the routing area.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8294'/>
  <seriesInfo name='DOI' value='10.17487/RFC8294'/>
</reference>

<reference anchor='RFC8177' target='https://www.rfc-editor.org/info/rfc8177'>
  <front>
    <title>YANG Data Model for Key Chains</title>
    <author fullname='A. Lindem' initials='A.' role='editor' surname='Lindem'/>
    <author fullname='Y. Qu' initials='Y.' surname='Qu'/>
    <author fullname='D. Yeung' initials='D.' surname='Yeung'/>
    <author fullname='I. Chen' initials='I.' surname='Chen'/>
    <author fullname='J. Zhang' initials='J.' surname='Zhang'/>
    <date month='June' year='2017'/>
    <abstract>
      <t>This document describes the key chain YANG data model. Key chains are commonly used for routing protocol authentication and other applications requiring symmetric keys. A key chain is a list containing one or more elements containing a Key ID, key string, send/accept lifetimes, and the associated authentication or encryption algorithm. By properly overlapping the send and accept lifetimes of multiple key chain elements, key strings and algorithms may be gracefully updated. By representing them in a YANG data model, key distribution can be automated.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8177'/>
  <seriesInfo name='DOI' value='10.17487/RFC8177'/>
</reference>

<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
  <front>
    <title>YANG Tree Diagrams</title>
    <author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'/>
    <author fullname='L. Berger' initials='L.' role='editor' surname='Berger'/>
    <date month='March' year='2018'/>
    <abstract>
      <t>This document captures the current syntax used in YANG module tree diagrams. The purpose of this document is to provide a single location for this definition. This syntax may be updated from time to time based on the evolution of the YANG language.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='215'/>
  <seriesInfo name='RFC' value='8340'/>
  <seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>

<reference anchor='RFC8639' target='https://www.rfc-editor.org/info/rfc8639'>
  <front>
    <title>Subscription to YANG Notifications</title>
    <author fullname='E. Voit' initials='E.' surname='Voit'/>
    <author fullname='A. Clemm' initials='A.' surname='Clemm'/>
    <author fullname='A. Gonzalez Prieto' initials='A.' surname='Gonzalez Prieto'/>
    <author fullname='E. Nilsen-Nygaard' initials='E.' surname='Nilsen-Nygaard'/>
    <author fullname='A. Tripathy' initials='A.' surname='Tripathy'/>
    <date month='September' year='2019'/>
    <abstract>
      <t>This document defines a YANG data model and associated mechanisms enabling subscriber-specific subscriptions to a publisher's event streams. Applying these elements allows a subscriber to request and receive a continuous, customized feed of publisher-generated information.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8639'/>
  <seriesInfo name='DOI' value='10.17487/RFC8639'/>
</reference>

<reference anchor='RFC8641' target='https://www.rfc-editor.org/info/rfc8641'>
  <front>
    <title>Subscription to YANG Notifications for Datastore Updates</title>
    <author fullname='A. Clemm' initials='A.' surname='Clemm'/>
    <author fullname='E. Voit' initials='E.' surname='Voit'/>
    <date month='September' year='2019'/>
    <abstract>
      <t>This document describes a mechanism that allows subscriber applications to request a continuous and customized stream of updates from a YANG datastore. Providing such visibility into updates enables new capabilities based on the remote mirroring and monitoring of configuration and operational state.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8641'/>
  <seriesInfo name='DOI' value='10.17487/RFC8641'/>
</reference>

<reference anchor='RFC8341' target='https://www.rfc-editor.org/info/rfc8341'>
  <front>
    <title>Network Configuration Access Control Model</title>
    <author fullname='A. Bierman' initials='A.' surname='Bierman'/>
    <author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'/>
    <date month='March' year='2018'/>
    <abstract>
      <t>The standardization of network configuration interfaces for use with the Network Configuration Protocol (NETCONF) or the RESTCONF protocol requires a structured and secure operating environment that promotes human usability and multi-vendor interoperability. There is a need for standard mechanisms to restrict NETCONF or RESTCONF protocol access for particular users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content. This document defines such an access control model.</t>
      <t>This document obsoletes RFC 6536.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='91'/>
  <seriesInfo name='RFC' value='8341'/>
  <seriesInfo name='DOI' value='10.17487/RFC8341'/>
</reference>



<reference anchor='RFC3688' target='https://www.rfc-editor.org/info/rfc3688'>
<front>
<title>The IETF XML Registry</title>
<author fullname='M. Mealling' initials='M.' surname='Mealling'><organization/></author>
<date month='January' year='2004'/>
<abstract><t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t></abstract>
</front>
<seriesInfo name='BCP' value='81'/>
<seriesInfo name='RFC' value='3688'/>
<seriesInfo name='DOI' value='10.17487/RFC3688'/>
</reference>



<reference anchor='RFC6242' target='https://www.rfc-editor.org/info/rfc6242'>
<front>
<title>Using the NETCONF Protocol over Secure Shell (SSH)</title>
<author fullname='M. Wasserman' initials='M.' surname='Wasserman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>This document describes a method for invoking and running the Network Configuration Protocol (NETCONF) within a Secure Shell (SSH) session as an SSH subsystem.  This document obsoletes RFC 4742.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6242'/>
<seriesInfo name='DOI' value='10.17487/RFC6242'/>
</reference>

<reference anchor='RFC8446' target='https://www.rfc-editor.org/info/rfc8446'>
  <front>
    <title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
    <author fullname='E. Rescorla' initials='E.' surname='Rescorla'/>
    <date month='August' year='2018'/>
    <abstract>
      <t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol. TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t>
      <t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961. This document also specifies new requirements for TLS 1.2 implementations.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8446'/>
  <seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC2205' target='https://www.rfc-editor.org/info/rfc2205'>
<front>
<title>Resource ReSerVation Protocol (RSVP) -- Version 1 Functional Specification</title>
<author fullname='R. Braden' initials='R.' role='editor' surname='Braden'><organization/></author>
<author fullname='L. Zhang' initials='L.' surname='Zhang'><organization/></author>
<author fullname='S. Berson' initials='S.' surname='Berson'><organization/></author>
<author fullname='S. Herzog' initials='S.' surname='Herzog'><organization/></author>
<author fullname='S. Jamin' initials='S.' surname='Jamin'><organization/></author>
<date month='September' year='1997'/>
<abstract><t>This memo describes version 1 of RSVP, a resource reservation setup protocol designed for an integrated services Internet.  RSVP provides receiver-initiated setup of resource reservations for multicast or unicast data flows, with good scaling and robustness properties. [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='2205'/>
<seriesInfo name='DOI' value='10.17487/RFC2205'/>
</reference>



<reference anchor='RFC3209' target='https://www.rfc-editor.org/info/rfc3209'>
<front>
<title>RSVP-TE: Extensions to RSVP for LSP Tunnels</title>
<author fullname='D. Awduche' initials='D.' surname='Awduche'><organization/></author>
<author fullname='L. Berger' initials='L.' surname='Berger'><organization/></author>
<author fullname='D. Gan' initials='D.' surname='Gan'><organization/></author>
<author fullname='T. Li' initials='T.' surname='Li'><organization/></author>
<author fullname='V. Srinivasan' initials='V.' surname='Srinivasan'><organization/></author>
<author fullname='G. Swallow' initials='G.' surname='Swallow'><organization/></author>
<date month='December' year='2001'/>
<abstract><t>This document describes the use of RSVP (Resource Reservation Protocol), including all the necessary extensions, to establish label-switched paths (LSPs) in MPLS (Multi-Protocol Label Switching).  Since the flow along an LSP is completely identified by the label applied at the ingress node of the path, these paths may be treated as tunnels.  A key application of LSP tunnels is traffic engineering with MPLS as specified in RFC 2702.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='3209'/>
<seriesInfo name='DOI' value='10.17487/RFC3209'/>
</reference>



<reference anchor='RFC2747' target='https://www.rfc-editor.org/info/rfc2747'>
<front>
<title>RSVP Cryptographic Authentication</title>
<author fullname='F. Baker' initials='F.' surname='Baker'><organization/></author>
<author fullname='B. Lindell' initials='B.' surname='Lindell'><organization/></author>
<author fullname='M. Talwar' initials='M.' surname='Talwar'><organization/></author>
<date month='January' year='2000'/>
<abstract><t>This document describes the format and use of RSVP's INTEGRITY object to provide hop-by-hop integrity and authentication of RSVP messages. [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='2747'/>
<seriesInfo name='DOI' value='10.17487/RFC2747'/>
</reference>



<reference anchor='RFC2961' target='https://www.rfc-editor.org/info/rfc2961'>
<front>
<title>RSVP Refresh Overhead Reduction Extensions</title>
<author fullname='L. Berger' initials='L.' surname='Berger'><organization/></author>
<author fullname='D. Gan' initials='D.' surname='Gan'><organization/></author>
<author fullname='G. Swallow' initials='G.' surname='Swallow'><organization/></author>
<author fullname='P. Pan' initials='P.' surname='Pan'><organization/></author>
<author fullname='F. Tommasi' initials='F.' surname='Tommasi'><organization/></author>
<author fullname='S. Molendini' initials='S.' surname='Molendini'><organization/></author>
<date month='April' year='2001'/>
<abstract><t>This document describes a number of mechanisms that can be used to reduce processing overhead requirements of refresh messages, eliminate the state synchronization latency incurred when an RSVP (Resource ReserVation Protocol) message is lost and, when desired, refreshing state without the transmission of whole refresh messages.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='2961'/>
<seriesInfo name='DOI' value='10.17487/RFC2961'/>
</reference>



<reference anchor='RFC3473' target='https://www.rfc-editor.org/info/rfc3473'>
<front>
<title>Generalized Multi-Protocol Label Switching (GMPLS) Signaling Resource ReserVation Protocol-Traffic Engineering (RSVP-TE) Extensions</title>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='January' year='2003'/>
<abstract><t>This document describes extensions to Multi-Protocol Label Switching (MPLS) Resource ReserVation Protocol - Traffic Engineering (RSVP-TE) signaling required to support Generalized MPLS.  Generalized MPLS extends the MPLS control plane to encompass time-division (e.g., Synchronous Optical Network and Synchronous Digital Hierarchy, SONET/SDH), wavelength (optical lambdas) and spatial switching (e.g., incoming port or fiber to outgoing port or fiber).  This document presents a RSVP-TE specific description of the extensions.  A generic functional description can be found in separate documents.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='3473'/>
<seriesInfo name='DOI' value='10.17487/RFC3473'/>
</reference>



<reference anchor='RFC5063' target='https://www.rfc-editor.org/info/rfc5063'>
<front>
<title>Extensions to GMPLS Resource Reservation Protocol (RSVP) Graceful Restart</title>
<author fullname='A. Satyanarayana' initials='A.' role='editor' surname='Satyanarayana'><organization/></author>
<author fullname='R. Rahman' initials='R.' role='editor' surname='Rahman'><organization/></author>
<date month='October' year='2007'/>
<abstract><t>This document describes extensions to the Resource Reservation Protocol (RSVP) Graceful Restart mechanisms defined in RFC 3473.  The extensions enable the recovery of RSVP signaling state based on the Path message last sent by the node being restarted.</t><t>Previously defined Graceful Restart mechanisms, also called recovery from nodal faults, permit recovery of signaling state from adjacent nodes when the data plane has retained the associated forwarding state across a restart.  Those mechanisms do not fully support signaling state recovery on ingress nodes or recovery of all RSVP objects.</t><t>The extensions defined in this document build on the RSVP Hello extensions defined in RFC 3209, and extensions for state recovery on nodal faults defined in RFC 3473.  Using these extensions, the restarting node can recover all previously transmitted Path state, including the Explicit Route Object and the downstream (outgoing) interface identifiers.  The extensions can also be used to recover signaling state after the restart of an ingress node.</t><t>These extensions are not used to create or restore data plane state.</t><t>The extensions optionally support the use of Summary Refresh, defined in RFC 2961, to reduce the number of messages exchanged during the Recovery Phase when the restarting node has recovered signaling state locally for one or more Label Switched Paths (LSPs).  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5063'/>
<seriesInfo name='DOI' value='10.17487/RFC5063'/>
</reference>

<reference anchor='RFC5495' target='https://www.rfc-editor.org/info/rfc5495'>
  <front>
    <title>Description of the Resource Reservation Protocol - Traffic-Engineered (RSVP-TE) Graceful Restart Procedures</title>
    <author fullname='D. Li' initials='D.' surname='Li'/>
    <author fullname='J. Gao' initials='J.' surname='Gao'/>
    <author fullname='A. Satyanarayana' initials='A.' surname='Satyanarayana'/>
    <author fullname='S. Bardalai' initials='S.' surname='Bardalai'/>
    <date month='March' year='2009'/>
    <abstract>
      <t>The Hello message for the Resource Reservation Protocol (RSVP) has been defined to establish and maintain basic signaling node adjacencies for Label Switching Routers (LSRs) participating in a Multiprotocol Label Switching (MPLS) traffic-engineered (TE) network. The Hello message has been extended for use in Generalized MPLS (GMPLS) networks for state recovery of control channel or nodal faults.</t>
      <t>The GMPLS protocol definitions for RSVP also allow a restarting node to learn which label it previously allocated for use on a Label Switched Path (LSP).</t>
      <t>Further RSVP protocol extensions have been defined to enable a restarting node to recover full control plane state by exchanging RSVP messages with its upstream and downstream neighbors.</t>
      <t>This document provides an informational clarification of the control plane procedures for a GMPLS network when there are multiple node failures, and describes how full control plane state can be recovered in different scenarios where the order in which the nodes restart is different.</t>
      <t>This document does not define any new processes or procedures. All protocol mechanisms are already defined in the referenced documents. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='5495'/>
  <seriesInfo name='DOI' value='10.17487/RFC5495'/>
</reference>

<reference anchor='rfc4558' target='https://www.rfc-editor.org/info/rfc4558'>
  <front>
    <title>Node-ID Based Resource Reservation Protocol (RSVP) Hello: A Clarification Statement</title>
    <author fullname='Z. Ali' initials='Z.' surname='Ali'/>
    <author fullname='R. Rahman' initials='R.' surname='Rahman'/>
    <author fullname='D. Prairie' initials='D.' surname='Prairie'/>
    <author fullname='D. Papadimitriou' initials='D.' surname='Papadimitriou'/>
    <date month='June' year='2006'/>
    <abstract>
      <t>Use of Node-ID based Resource Reservation Protocol (RSVP) Hello messages is implied in a number of cases, e.g., when data and control planes are separated, when TE links are unnumbered. Furthermore, when link level failure detection is performed by some means other than exchanging RSVP Hello messages, use of a Node-ID based Hello session is optimal for detecting signaling adjacency failure for Resource reSerVation Protocol-Traffic Engineering (RSVP-TE). Nonetheless, this implied behavior is unclear, and this document formalizes use of the Node-ID based RSVP Hello session in some scenarios. The procedure described in this document applies to both Multi-Protocol Label Switching (MPLS) and Generalized MPLS (GMPLS) capable nodes. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='4558'/>
  <seriesInfo name='DOI' value='10.17487/RFC4558'/>
</reference>




    </references>



  </back>

<!-- ##markdown-source:
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
DrsrUPXxxKuMcKAbOrq1vQcbr03xa6e/S7+AhNBb8W77gA8/TpS3clXSJot8
p00YVcxgAmGvrezbhuFR7Po1vY74xLF2jVmckEJ3M2HcNltpYfBbcrRqG42a
AShDMGKLaZQLEzQuK1N2WUpDIZ8thsGvqGabwdJi0avYP7P661IETGmh2QQ1
sUGT4HB8jXr0eJ3zQMFsmApFi7lwHeVJtsAzLHsahHwPXGFXTrLCtfeiTa6N
lXfeLJk1JhRz4rj7xCfOpjgW+Ta/jLd3dvZdOPlmkwdu++kEs0k7qj4r8wWZ
ButbYUsL50wpNn6wB+xO2TUdcMktoDhKop9F4Dbw1xmLqc2SOd8ImTn0lqnN
KNcD1XYzupiywq5Zs0eLja8fadqDc8aRW1fqB24HUVODIrwKbYGCjaQH+9Zo
Pp8C+6ENlluZlVnNXG+w2afVVl/RxqYLpwU1H11As7VljvO31DhEYzBlwy+1
Qxr8lbLkanIBUw9/iP1nwYkACCXXzGhKIynxUidn0biLBtCOsCGOQTmIy+mt
toBig6TmcDRqlj7oV3cCOBDRpK4sH7ELG1XKWcB1sPyGaPVfgdLK4M3XX/MB
6GoDQHh/802lyPXsP3ltnS7a0zN+QVEYZWjJJE7d6lnBatW0NggPbRnZAPbk
4fkiTdm0Vetq1B+78XweF6Oq6Y+g6rEo74r27Q+SLPYXU6KbLCPU8IqplDKO
UwHfCv4g+yIXWGja69zVF0uyPofBE52rnsAk+oYWdwevNU9TVGzqcgBgSQkg
JYKaOJr4qVvP+Hrw5vAvYXR5iXNKijWAV522sUl0nWQ5TKknFUNWHdBfagJO
ybYonMIyroQIl6BjjbdRUAEsUyIKJaSBEPIE0UUMHXh4mAqTqVBJNIs8YYb9
j6McC+ABP0gUo10AhwYs1XAPAN5yFNT7itidCnpHowanf1IAMNj5AJK3DmGu
IbZIYZUBzYJ6yD5iyQTFISpXeTIesxTNFd/UKFTDJwqLOaiOl6B5KtA4ikpO
PAmrUdReLh9EVbhXpy6AM0q0IrE2tMrZgWupAE71wYCrGdQUMsqGe5tGMyAt
UhlNhEIjJX1O4qcMknTwLCpqhFab0jFSTMo2jevVqwZy8ZZEQYtUcqZJc+0D
KFWNtOofB9ozcSDpsSg4A5pCuFLgYTHmB5kACzShxZTGXREMKa+sxMqQX8KW
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
Fs7qKsU8r15lnFd/iTu0f30aqo+f17J7EO3z0vZbW9pqQ/N5pfv3Wulqw/sf
uvDVqPB7Xwd992ir7bh+l3Z9j16/VTus3avNt/fOre49btSmpHnaldTkrSfv
l17xOuyH3bm9/DJtlzWBbhbXLQomTc3N/wNu2K5u0fZfnO26i5tfoa1fqs1v
517hUm3VV7xde9AdDLv9oed27YrD0PS1jmu2FUQyWmm3aKsP1nXaWh5G49Zt
fPH411b+Vu+k/oUu4f5Frr4OPt8//fn+6ce/f1rZtj9fRP35IurPF1E/7kXU
QrHw+zr/mhdRK6/s2nWPhrrjPus3zpCqSzHDXGMxx/2Zsns8pkke+luuyFtD
7ZAxpyizzla/19vf3e73reNej0O+csXf6mvvHF7DrwEP7myPlGRRPHGeQFYH
jJ5ba1e6qlLzitZ2V+1IMej1drctMlRxH83d/VFrDkZpmoAE0zKwo8Unu+xm
+Vi7C/LR+q52jmbPjWNyZy9E/vG4fhXc46Gq7WJbD9Og33cwbBUk0jxSVeCy
3jZlhFf3XuBZrTDoPVrP69qv6Ldnn97YJVR6OSjy1kH/TP1WBzOWtFAa7eMN
rikIuaForQKQg9TlXs32dE/Or0Phjq/R+B/wKo1vMTRNHP07AjFM25aLnSUK
QrjqaaxsCXugc7kTaUkvLez2AnRIBqxcLOIYnZhgHTWuyMSQv4oXdASWccHv
/lZra6S4hXEFseOXOVttB2oWfdSWhRhviYwXaPENCZtxbbR+N4MSPmRUatFs
UkB1KwmwVuGhGtDlR/3YrcX0vbdudMbKxhkrcGGFPfr1TLx3dg/8bG2LmOV4
LmVYJVguZcKYijt4es+VelE7qrynHKdxlilc1G08mIJhUZrxgW1wcp6KrooZ
ZYLuvheVL6fRFe45KT/5sXGpnL3GNITF29PHzsezzrlj5dgxNh+eQ712InZn
MAQVfKdZt9tpvybK2F/CYOPitmTFU+ThKERXWckk/F5tbUnkuPtIjzZym0GM
88lfdOHHVvk2q5YWk09HpnkiHx79t9XNDT1xdNueNg2r1ZkVR4yPljVKgPv9
R6Z2vvvg8VmlR3RENI1ureGBCYWB/zRM+h1ogHCa3UzZmJ9zCq9+7npedaR0
bkwa6OA6ur6fbBUBfIKzYKTeHJ+dHX5//PeTl9zGA2P195e8BW3XAUsJfa3f
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

-->

</rfc>

