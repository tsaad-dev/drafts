<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.5.8 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-teas-yang-rsvp-17" category="std">

  <front>
    <title abbrev="RSVP YANG Data Model">A YANG Data Model for Resource Reservation Protocol (RSVP)</title>

    <author initials="V.P." surname="Beeram" fullname="Vishnu Pavan Beeram">
      <organization>Juniper Networks</organization>
      <address>
        <email>vbeeram@juniper.net</email>
      </address>
    </author>
    <author initials="T." surname="Saad" fullname="Tarek Saad">
      <organization>Juniper Networks</organization>
      <address>
        <email>tsaad@juniper.net</email>
      </address>
    </author>
    <author initials="R." surname="Gandhi" fullname="Rakesh Gandhi">
      <organization>Cisco Systems, Inc.</organization>
      <address>
        <email>rgandhi@cisco.com</email>
      </address>
    </author>
    <author initials="X." surname="Liu" fullname="Xufeng Liu">
      <organization>Volta Networks</organization>
      <address>
        <email>xufeng.liu.ietf@gmail.com</email>
      </address>
    </author>
    <author initials="I." surname="Bryskin" fullname="Igor Bryskin">
      <organization>Individual</organization>
      <address>
        <email>i_bryskin@yahoo.com</email>
      </address>
    </author>

    <date year="2021" month="December" day="02"/>

    
    <workgroup>TEAS Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a YANG data model for the configuration and management of
the RSVP protocol. The YANG data model covers the building blocks that may be
augmented by other RSVP extension data models such as RSVP Traffic-Engineering
(RSVP-TE). It is divided into two modules that cover the basic and extended
RSVP features.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>YANG <xref target="RFC6020"/> and <xref target="RFC7950"/> is a data modeling language that was
introduced to define the contents of a conceptual data store that allows
networked devices to be managed using NETCONF <xref target="RFC6241"/>. YANG has proved
relevant beyond its initial confines, as bindings to other interfaces (e.g.
RESTCONF <xref target="RFC8040"/>) and encoding other than XML (e.g. JSON) are being defined.
Furthermore, YANG data models can be used as the basis of implementation for
other interfaces, such as CLI and programmatic APIs.</t>

<t>This document defines a YANG data model for the configuration and management of
the RSVP protocol <xref target="RFC2205"/>. The data model is divided into two modules:
a base and extended RSVP YANG modules. The RSVP base YANG ‘ietf-rsvp’ module covers the
data that is core to the function of the RSVP protocol and MUST be supported by
vendors that support RSVP protocol <xref target="RFC2205"/>.  The RSVP extended ‘ietf-rsvp-extended’
module covers the data that is optional, or provides ability to tune
RSVP protocol base functionality. The support for RSVP extended module
features by vendors is considered optional.</t>

<t>The RSVP YANG model provides the building blocks needed to allow augmentation
by other models that extend the RSVP protocol– such as using RSVP extensions to
signal Label Switched Paths (LSPs) as defined in <xref target="RFC3209"/>.</t>

<t>The YANG module(s) defined in this document are compatible with the Network
Management Datastore Architecture (NMDA) <xref target="RFC7950"/>.</t>

</section>
<section anchor="requirements-language" title="Requirements Language">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”,
“SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this
document are to be interpreted as described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
when, and only when, they appear in all capitals, as shown here.</t>

<t>The terminology for describing YANG data models is found in <xref target="RFC7950"/>.</t>

<section anchor="prefixes-in-data-node-names" title="Prefixes in Data Node Names">

<t>In this document, names of data nodes and other data model objects are prefixed
using the standard prefix associated with the corresponding YANG imported
modules, as shown in Table 1.</t>

<texttable>
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>YANG module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>if</c>
      <c>ietf-interfaces</c>
      <c><xref target="RFC8343"/></c>
      <c>rt</c>
      <c>ietf-routing</c>
      <c><xref target="RFC8349"/></c>
      <c>rt-types</c>
      <c>ietf-routing-types</c>
      <c><xref target="RFC8294"/></c>
      <c>inet</c>
      <c>ietf-inet-types</c>
      <c><xref target="RFC6991"/></c>
      <c>yang</c>
      <c>ietf-yang-types</c>
      <c><xref target="RFC6991"/></c>
      <c>key-chain</c>
      <c>ietf-key-chain</c>
      <c><xref target="RFC8177"/></c>
</texttable>

<figure><artwork><![CDATA[
          Table 1: Prefixes and corresponding YANG modules
]]></artwork></figure>

</section>
<section anchor="model-tree-diagram" title="Model Tree Diagram">

<t>A full tree diagram of the module(s) defined in this document is given in
subsequent sections  as per the syntax defined in <xref target="RFC8340"/>.</t>

</section>
</section>
<section anchor="model-overview" title="Model Overview">

<t>The RSVP YANG module augments the “control-plane-protocol” entry from the
‘ietf-routing’ module defined in <xref target="RFC8349"/>. It also defines the identity
“rsvp” of base type “rt:routing-protocol” to identify the RSVP routing protocol.</t>

<t>The ‘ietf-rsvp’ model defines a single instance of the RSVP protocol.  The top
‘rsvp’ container encompases data for one such RSVP protocol instance.  Multiple
instances can be defined as multiple control-plane protocols instances as
described in <xref target="RFC8349"/>.</t>

<t>The YANG data model defined has the common building blocks for the operation of
the base RSVP protocol for the session type defined in <xref target="RFC2205"/>. The
augmentation of this model by other models (e.g. to support RSVP Traffic
Engineering (TE) extensions for signaling Label Switched Paths (LSPs)) are
outside the scope of this document and are discussed in separate document(s).</t>

<section anchor="modules-relationship" title="Module(s) Relationship">

<t>This RSVP YANG data model defined in this document is divided into two modules: a base and extended
modules. The RSVP data covered in ‘ietf-rsvp’ module are categorized as core to
the function of the protocol and MUST be supported by vendors claiming the support for RSVP
protocol <xref target="RFC2205"/>.</t>

<t>The RSVP extended features that are covered in ‘ietf-rsvp-extended’ module are
categorized as either optional or providing ability to better tune the basic
functionality of the RSVP protocol. The support for RSVP extended features by
all vendors is considered optional.</t>

<t>The relationship between the base and RSVP extended YANG modules and the IETF
routing YANG model is shown in <xref target="figctrl"/>.</t>

<figure title="Relationship of RSVP and RSVP extended modules with other
protocol modules" anchor="figctrl"><artwork><![CDATA[
                +--------------+
       Routing  | ietf-routing |
                +--------------+
                      ^
                      |
                 +-----------+ 
  RSVP module    | ietf-rsvp |
                 +-----------+
                      ^
                      |                    ^: augment relationship
  RSVP extended       |
    module       +--------------------+
                 | ietf-rsvp-extended |
                 +--------------------+
]]></artwork></figure>

</section>
<section anchor="CoreFeatures" title="Core Features">

<t>The RSVP data covered in the ‘ietf-rsvp’ YANG module provides the common building
blocks that are required to configure, operate and manage the RSVP protocol
and MUST be supported by vendors that claim the support for base RSVP protocol
defined in <xref target="RFC2205"/>.</t>

<t>In addition, the following standard RSVP core features are modeled under the
‘ietf-rsvp’ module:</t>

<t><list style="symbols">
  <t>Basic operational statistics, including protocol messages, packets and errors.</t>
  <t>Basic RSVP authentication feature as defined in <xref target="RFC2747"/>) using string
based authentication key.</t>
  <t>Basic RSVP Refresh Reduction feature as defined in (<xref target="RFC2961"/>).</t>
  <t>Basic RSVP Hellos feature as defined in (<xref target="RFC3209"/>)</t>
  <t>Basic RSVP Graceful Restart feature as defined in <xref target="RFC3473"/>, <xref target="RFC5063"/>, and
<xref target="RFC5495"/>.</t>
</list></t>

</section>
<section anchor="OptionalFeatures" title="Optional Features">

<t>Optional features are beyond the basic configuration, and operation of the
RSVP protocol. The decision whether to support these RSVP features on a
particular device is left to the vendor that supports the RSVP core features.</t>

<t>The following optional features that are covered in the ‘ietf-rsvp-extended’
YANG module:</t>

<t><list style="symbols">
  <t>Advanced operational statistics, including protocol messages, packets and errors.</t>
  <t>Advanced RSVP authentication features as defined in <xref target="RFC2747"/>) using various
authentication key types including those defined in <xref target="RFC8177"/>.</t>
  <t>Advanced RSVP Refresh Reduction features defined in (<xref target="RFC2961"/>).</t>
  <t>Advanced RSVP Hellos features as defined in <xref target="RFC3209"/>, and <xref target="rfc4558"/>.</t>
  <t>Advanced RSVP Graceful Restart features as defined in <xref target="RFC3473"/>, <xref target="RFC5063"/>, and
<xref target="RFC5495"/>.</t>
</list></t>

</section>
<section anchor="data-model-structure" title="Data Model Structure">

<t>The RSVP YANG data model defines the ‘rsvp’ top-level container that contains
the configuration and operational state for the RSVP protocol.
The presence of this container enables the RSVP protocol functionality.</t>

<t>The ‘rsvp’ top-level container also includes data that has router level scope
(i.e. applicable to all objects modeled under rsvp). It also contains
configuration and state data about the following types of RSVP objects:</t>

<t><list style="symbols">
  <t>interfaces</t>
  <t>neighbors</t>
  <t>sessions</t>
</list></t>

<t>The derived state data is contained in “read-only” nodes directly under the
intended object as shown in <xref target="fig-highlevel"/>.</t>

<figure title="RSVP high-level tree model view" anchor="fig-highlevel"><artwork><![CDATA[
module: ietf-rsvp
   +--rw rsvp!
      +--rw <<router-level scope data>>
         .
         .
      +--rw interfaces
            .
            +-- ro <<derived state associated with interfaces>>
         .
         .
      +--rw neighbors
            .
            +-- ro <<derived state associated with the LSP Tunnel>>
         .
         .
      +--rw sessions
            .
            +-- ro <<derived state associated with the LSP Tunnel>>
         .
   rpcs:
      +--x clear-session
      +--x clear-neighbor
      +--x clear-authentication

]]></artwork></figure>

<t>The following</t>

<t>‘router-level’:</t>

<t><list style='empty'>
  <t>The router-level scope configuration and state data are applicable to all
modeled objects under the top-level ‘rsvp’ container, and MAY affect the RSVP
protocol behavior.</t>
</list></t>

<t>‘interfaces’:</t>

<t><list style='empty'>
  <t>The ‘interfaces’ container includes a list of RSVP enabled interfaces. It
also includes RSVP configuration and state data that is applicable to all
interfaces.  An entry in the interfaces list MAY carry its own configuration
or state data. Any data or state under the “interfaces” container level is
equally applicable to all interfaces unless it is explicitly overridden by
configuration or state under a specific interface.</t>
</list></t>

<t>‘neighbors’ :</t>

<t><list style='empty'>
  <t>The ‘neighbors’ container includes a list of RSVP neighbors. An entry in the
RSVP neighbor list MAY carry its own configuration and state relevant to the
specific RSVP neighbor. The RSVP neighbors can be dynamically discovered using
RSVP signaling, or can be explicitly configured.</t>
</list></t>

<t>‘sessions’:</t>

<t><list style='empty'>
  <t>The ‘sessions’ container includes a list RSVP sessions. An entry in the RSVP
session list MAY carry its own configuration and state relevant to a specific
RSVP session. RSVP sessions are usually derived state that are created as
result of signaling. This model defines attributes related to IP RSVP
sessions as defined in <xref target="RFC2205"/>.</t>
</list></t>

<t>The defined YANG data model supports configuration inheritance for neighbors, and
interfaces.  Data nodes defined under the main container (e.g. the container
that encompasses the list of interfaces, or neighbors) are assumed to apply
equally to all elements of the list, unless overridden explicitly for a certain
element (e.g. interface).</t>

</section>
<section anchor="model-notifications" title="Model Notifications">

<t>Modeling notifications data is key in any defined YANG data model. <xref target="RFC8639"/> and
<xref target="RFC8641"/> define a subscription and push mechanism for YANG datastores. This
mechanism currently allows the user to:</t>

<t><list style="symbols">
  <t>Subscribe notifications on a per client basis</t>
  <t>Specify subtree filters <xref target="RFC6241"/> or XPath filters <xref target="RFC8639"/> so that only interested
contents will be sent.</t>
  <t>Specify either periodic or on-demand notifications.</t>
</list></t>

</section>
</section>
<section anchor="rsvp-base-yang-model" title="RSVP Base YANG Model">

<t>The RSVP base module includes the core features and building blocks for modeling the RSVP
protocol as described in <xref target="CoreFeatures"/>.</t>

<section anchor="tree-diagram" title="Tree Diagram">

<t><xref target="fig-rsvp-tree"/> shows the YANG tree representation for configuration, state
data and RPCs that are covered in ‘ietf-rsvp’ YANG module:</t>

<figure title="RSVP model tree diagram" anchor="fig-rsvp-tree"><artwork><![CDATA[
module: ietf-rsvp

  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol:
    +--rw rsvp!
       +--rw interfaces
       |  +--rw refresh-reduction
       |  |  +--rw enabled?   boolean
       |  +--rw hellos
       |  |  +--rw enabled?   boolean
       |  +--rw authentication
       |  |  +--rw enabled?              boolean
       |  |  +--rw authentication-key?   string
       |  |  +--rw crypto-algorithm      identityref
       |  +--ro statistics
       |  |  +--ro messages
       |  |  |  +--ro ack-sent?                       yang:counter64
       |  |  |  +--ro ack-received?                   yang:counter64
       |  |  |  +--ro bundle-sent?                    yang:counter64
       |  |  |  +--ro bundle-received?                yang:counter64
       |  |  |  +--ro hello-sent?                     yang:counter64
       |  |  |  +--ro hello-received?                 yang:counter64
       |  |  |  +--ro integrity-challenge-sent?       yang:counter64
       |  |  |  +--ro integrity-challenge-received?   yang:counter64
       |  |  |  +--ro integrity-response-sent?        yang:counter64
       |  |  |  +--ro integrity-response-received?    yang:counter64
       |  |  |  +--ro notify-sent?                    yang:counter64
       |  |  |  +--ro notify-received?                yang:counter64
       |  |  |  +--ro path-sent?                      yang:counter64
       |  |  |  +--ro path-received?                  yang:counter64
       |  |  |  +--ro path-err-sent?                  yang:counter64
       |  |  |  +--ro path-err-received?              yang:counter64
       |  |  |  +--ro path-tear-sent?                 yang:counter64
       |  |  |  +--ro path-tear-received?             yang:counter64
       |  |  |  +--ro resv-sent?                      yang:counter64
       |  |  |  +--ro resv-received?                  yang:counter64
       |  |  |  +--ro resv-confirm-sent?              yang:counter64
       |  |  |  +--ro resv-confirm-received?          yang:counter64
       |  |  |  +--ro resv-err-sent?                  yang:counter64
       |  |  |  +--ro resv-err-received?              yang:counter64
       |  |  |  +--ro resv-tear-sent?                 yang:counter64
       |  |  |  +--ro resv-tear-received?             yang:counter64
       |  |  |  +--ro srefresh-sent?                  yang:counter64
       |  |  |  +--ro srefresh-received?              yang:counter64
       |  |  |  +--ro unknown-messages-received?      yang:counter64
       |  |  +--ro packets
       |  |  |  +--ro sent?       yang:counter64
       |  |  |  +--ro received?   yang:counter64
       |  |  +--ro errors
       |  |     +--ro authenticate?    yang:counter64
       |  |     +--ro checksum?        yang:counter64
       |  |     +--ro packet-length?   yang:counter64
       |  +--rw interface* [name]
       |     +--rw name                 if:interface-ref
       |     +--rw refresh-reduction
       |     |  +--rw enabled?   boolean
       |     +--rw hellos
       |     |  +--rw enabled?   boolean
       |     +--rw authentication
       |     |  +--rw enabled?              boolean
       |     |  +--rw authentication-key?   string
       |     |  +--rw crypto-algorithm      identityref
       |     +--ro statistics
       |        +--ro messages
       |        |  +--ro ack-sent?
       |        |  |       yang:counter64
       |        |  +--ro ack-received?
       |        |  |       yang:counter64
       |        |  +--ro bundle-sent?
       |        |  |       yang:counter64
       |        |  +--ro bundle-received?
       |        |  |       yang:counter64
       |        |  +--ro hello-sent?
       |        |  |       yang:counter64
       |        |  +--ro hello-received?
       |        |  |       yang:counter64
       |        |  +--ro integrity-challenge-sent?
       |        |  |       yang:counter64
       |        |  +--ro integrity-challenge-received?
       |        |  |       yang:counter64
       |        |  +--ro integrity-response-sent?
       |        |  |       yang:counter64
       |        |  +--ro integrity-response-received?
       |        |  |       yang:counter64
       |        |  +--ro notify-sent?
       |        |  |       yang:counter64
       |        |  +--ro notify-received?
       |        |  |       yang:counter64
       |        |  +--ro path-sent?
       |        |  |       yang:counter64
       |        |  +--ro path-received?
       |        |  |       yang:counter64
       |        |  +--ro path-err-sent?
       |        |  |       yang:counter64
       |        |  +--ro path-err-received?
       |        |  |       yang:counter64
       |        |  +--ro path-tear-sent?
       |        |  |       yang:counter64
       |        |  +--ro path-tear-received?
       |        |  |       yang:counter64
       |        |  +--ro resv-sent?
       |        |  |       yang:counter64
       |        |  +--ro resv-received?
       |        |  |       yang:counter64
       |        |  +--ro resv-confirm-sent?
       |        |  |       yang:counter64
       |        |  +--ro resv-confirm-received?
       |        |  |       yang:counter64
       |        |  +--ro resv-err-sent?
       |        |  |       yang:counter64
       |        |  +--ro resv-err-received?
       |        |  |       yang:counter64
       |        |  +--ro resv-tear-sent?
       |        |  |       yang:counter64
       |        |  +--ro resv-tear-received?
       |        |  |       yang:counter64
       |        |  +--ro srefresh-sent?
       |        |  |       yang:counter64
       |        |  +--ro srefresh-received?
       |        |  |       yang:counter64
       |        |  +--ro unknown-messages-received?
       |        |          yang:counter64
       |        +--ro packets
       |        |  +--ro sent?       yang:counter64
       |        |  +--ro received?   yang:counter64
       |        +--ro errors
       |           +--ro authenticate?    yang:counter64
       |           +--ro checksum?        yang:counter64
       |           +--ro packet-length?   yang:counter64
       +--rw sessions
       |  +--ro session-ip*
       |          [destination protocol-id destination-port]
       |     +--ro destination-port    uint16
       |     +--ro protocol-id         uint8
       |     +--ro source?             inet:ip-address
       |     +--ro destination         inet:ip-address
       |     +--ro session-name?       string
       |     +--ro session-status?     enumeration
       |     +--ro session-type        identityref
       |     +--ro psbs
       |     |  +--ro psb* []
       |     |     +--ro source-port?   inet:port-number
       |     |     +--ro expires-in?    uint32
       |     +--ro rsbs
       |        +--ro rsb* []
       |           +--ro source-port?         inet:port-number
       |           +--ro reservation-style    identityref
       |           +--ro expires-in?          uint32
       +--rw neighbors
       |  +--rw neighbor* [address]
       |     +--rw address                      inet:ip-address
       |     +--rw epoch?                       uint32
       |     +--rw expiry-time?                 uint32
       |     +--rw graceful-restart
       |     |  +--ro neighbor-restart-time?    uint32
       |     |  +--ro neighbor-recovery-time?   uint32
       |     |  +--rw helper-mode
       |     |     +--ro neighbor-restart-time-remaining?    uint32
       |     |     +--ro neighbor-recovery-time-remaining?   uint32
       |     +--ro hello-status?                enumeration
       |     +--rw interface?                   if:interface-ref
       |     +--ro neighbor-status?             enumeration
       |     +--rw refresh-reduction-capable?   boolean
       |     +--ro restart-count?               yang:counter32
       |     +--ro restart-time?                yang:date-and-time
       +--rw graceful-restart
          +--rw enabled?               boolean
          +--rw local-restart-time?    uint32
          +--rw local-recovery-time?   uint32
          +--rw helper-mode
             +--rw enabled?                    boolean
             +--rw max-helper-restart-time?    uint32
             +--rw max-helper-recovery-time?   uint32

  rpcs:
    +---x clear-session
    |  +---w input
    |     +---w routing-protocol-instance-name    leafref
    |     +---w (filter-type)
    |        +--:(match-all)
    |        |  +---w all                         empty
    |        +--:(match-one)
    |           +---w session-info
    |              +---w (session-type)
    |                 +--:(rsvp-session-ip)
    |                    +---w destination         leafref
    |                    +---w protocol-id         uint8
    |                    +---w destination-port    inet:ip-address
    +---x clear-neighbor
    |  +---w input
    |     +---w routing-protocol-instance-name    leafref
    |     +---w (filter-type)
    |        +--:(match-all)
    |        |  +---w all                         empty
    |        +--:(match-one)
    |           +---w neighbor-address            leafref
    +---x clear-authentication
       +---w input
          +---w routing-protocol-instance-name    leafref
          +---w (filter-type)
             +--:(match-all)
             |  +---w all                         empty
             +--:(match-one-interface)
                +---w interface?                  if:interface-ref
]]></artwork></figure>

</section>
<section anchor="rsvp-yang-mod" title="YANG Module">

<t>The ietf-rsvp module imports from the following modules:</t>

<t><list style="symbols">
  <t>ietf-interfaces defined in <xref target="RFC8343"/></t>
  <t>ietf-yang-types and ietf-inet-types defined in <xref target="RFC6991"/></t>
  <t>ietf-routing defined in <xref target="RFC8349"/></t>
  <t>ietf-key-chain defined in <xref target="RFC8177"/></t>
  <t>ietf-netconf-acm defined in <xref target="RFC8341"/></t>
</list></t>

<t>This module also references the following documents:
<xref target="RFC2205"/>, <xref target="RFC5495"/>, <xref target="RFC3473"/>, <xref target="RFC5063"/>, <xref target="RFC2747"/>, <xref target="RFC3209"/>, and <xref target="RFC2961"/>.</t>

<figure><artwork><![CDATA[
<CODE BEGINS> file "ietf-rsvp@2021-12-02.yang"
module ietf-rsvp {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-rsvp";

  /* Replace with IANA when assigned */

  prefix rsvp;

  import ietf-interfaces {
    prefix if;
    reference
      "RFC8343: A YANG Data Model for Interface Management";
  }
  import ietf-inet-types {
    prefix inet;
    reference
      "RFC6991: Common YANG Data Types";
  }
  import ietf-yang-types {
    prefix yang;
    reference
      "RFC6991: Common YANG Data Types";
  }
  import ietf-routing {
    prefix rt;
    reference
      "RFC8349: A YANG Data Model for Routing Management
       (NMDA Version)";
  }
  import ietf-key-chain {
    prefix key-chain;
    reference
      "RFC8177: YANG Data Model for Key Chains";
  }
  import ietf-netconf-acm {
    prefix nacm;
    reference
      "RFC8341: Network Configuration Access Control Model";
  }
  organization
    "IETF Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact
    "WG Web:   <http://tools.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>

     Editor:   Vishnu Pavan Beeram
               <mailto:vbeeram@juniper.net>

     Editor:   Tarek Saad
               <mailto:tsaad@juniper.net>

     Editor:   Rakesh Gandhi
               <mailto:rgandhi@cisco.com>

     Editor:   Xufeng Liu
               <mailto: xufeng.liu.ietf@gmail.com>

     Editor:   Igor Bryskin
               <mailto:i_bryskin@yahoo.com>";
  description
    "This module contains the RSVP YANG data model.
     The model fully conforms to the Network Management Datastore
     Architecture (NMDA).

     Copyright (c) 2019 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).
     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";

  // RFC Ed.: replace XXXX with actual RFC number and remove this
  // note.
  // RFC Ed.: update the date below with the date of RFC publication
  // and remove this note.

  revision 2021-12-02 {
    description
      "Initial version.";
    reference
      "RFCXXXX: A YANG Data Model for Resource Reservation Protocol
       (RSVP)";
  }

  identity rsvp {
    base rt:routing-protocol;
    description
      "RSVP protocol";
  }

  identity rsvp-session-type {
    description
      "Base RSVP session type";
  }

  identity rsvp-session-ip {
    base rsvp-session-type;
    description
      "RSVP IP session type";
  }

  identity reservation-style {
    description
      "Base identity for reservation style.";
  }

  identity reservation-wildcard-filter {
    base reservation-style;
    description
      "Wildcard-Filter (WF) Style.";
    reference
      "RFC2205";
  }

  identity reservation-fixed-filter {
    base reservation-style;
    description
      "Fixed-Filter (FF) Style.";
    reference
      "RFC2205";
  }

  identity reservation-shared-explicit {
    base reservation-style;
    description
      "Shared Explicit (SE) Style.";
    reference
      "RFC2205";
  }

  grouping graceful-restart {
    description
      "RSVP graceful restart local parameters grouping.";
    container graceful-restart {
      description
        "Graceful restart local information.";
      leaf enabled {
        type boolean;
        default "false";
        description
          "'true' if RSVP Graceful Restart is enabled.
           'false' if RSVP Graceful Restart is disabled.";
        reference "RFC5495";
      }
      leaf local-restart-time {
        type uint32;
        units "seconds";
        default "120";
        description
          "Time it takes the local node to restart its RSVP-TE
           component (to the point where it can exchange RSVP
           Hello with its neighbors). A value of 0xffffffff
           indicates that the restart of the neighbor's control plane
           may occur over an indeterminate interval and that the
           operation of its data plane is unaffected by control plane
           failures.";
        reference "RFC3473";
      }
      leaf local-recovery-time {
        type uint32;
        units "seconds";
        default "120";
        description
          "The period of time, in seconds, that the local
           node requires to re-synchronize RSVP and MPLS
           forwarding state with its neighbor. A value of zero (0)
           indicates that MPLS forwarding state was not preserved
           across a particular reboot.";
        reference "RFC3473";
      }
      container helper-mode {
        description
          "Helper mode information. In this mode, the node will
           resynchronize states with its neighbor after control
           channel failure, or control plane restart.";
        leaf enabled {
          type boolean;
          default "true";
          description
            "'true' if helper mode is enabled.";
        }
        leaf max-helper-restart-time {
          type uint32;
          units "seconds";
          default "20";
          description
            "The maximum time the router or switch waits after it
             discovers that the neighboring router has gone down
             before it declares the neighbor down.";
          reference "RFC5063";
        }
        leaf max-helper-recovery-time {
          type uint32;
          units "seconds";
          default "180";
          description
            "The maximum amount of time the router retains the state
             of its RSVP neighbors while they undergo a graceful
             restart.";
          reference "RFC5063";
        }
      }
    }
  }
  grouping neighbor-graceful-restart {
    description
      "RSVP graceful restart neighbor parameters grouping.";
    container graceful-restart {
      description
        "Graceful restart information.";
      leaf neighbor-restart-time {
        type uint32;
        units "seconds";
        default "120";
        config false;
        description
          "Time it takes the neighbor node to restart its RSVP-TE
           component (to the point where it can exchange RSVP
           Hello with its neighbors). A value of 0xffffffff
           indicates that the restart of the neighbor's control plane
           may occur over an indeterminate interval and that the
           operation of its data plane is unaffected by control plane
           failures.";
        reference "RFC3473";
      }
      leaf neighbor-recovery-time {
        type uint32;
        units "seconds";
        default "120";
        config false;
        description
          "The period of time, in milliseconds, that the neighbor
           node requires to re-synchronize RSVP and MPLS
           forwarding state with its neighbor. A value of zero (0)
           indicates that MPLS forwarding state was not preserved
           across a particular reboot.";
        reference "RFC3473";
      }
      container helper-mode {
        description
          "Helper mode information.";
        leaf neighbor-restart-time-remaining {
          type uint32;
          units "seconds";
          config false;
          description
            "Number of seconds remaining for neighbor to send Hello
             message after restart.";
          reference "RFC5063";
        }
        leaf neighbor-recovery-time-remaining {
          type uint32;
          units "seconds";
          config false;
          description
            "Number of seconds remaining for neighbor to refresh.";
          reference "RFC5063";
        }
      }
      // helper-mode
    }
  }

  grouping refresh-reduction {
    description
      "Top level grouping for RSVP refresh reduction parameters.";
    container refresh-reduction {
      description
        "Top level container for RSVP refresh reduction parameters.";
      leaf enabled {
        type boolean;
        default "true";
        description
          "'true' if RSVP Refresh Reduction is enabled.
           'false' if RSVP Refresh Reduction is disabled.";
      }
      reference
        "RFC2961 RSVP Refresh Overhead Reduction Extensions";
    }
  }

  grouping authentication {
    description
      "Top level grouping for RSVP authentication parameters.";
    container authentication {
      description
        "Top level container for RSVP authentication parameters.";
      leaf enabled {
        type boolean;
        default "false";
        description
          "'true' if RSVP Authentication is enabled.
           'false' if RSVP Authentication is disabled.";
      }
      leaf authentication-key {
        type string;
        default "";
        description
          "An authentication key string.";
        reference
          "RFC2747: RSVP Cryptographic Authentication";
      }
      leaf crypto-algorithm {
        type identityref {
          base key-chain:crypto-algorithm;
        }
        mandatory true;
        description
          "Cryptographic algorithm associated with key.";
      }
    }
  }

  grouping hellos {
    description
      "Top level grouping for RSVP hellos parameters.";
    container hellos {
      description
        "Top level container for RSVP hello parameters.";
      leaf enabled {
        type boolean;
        default "true";
        description
          "'true' if RSVP Hello is enabled.
           'false' if RSVP Hello is disabled.";
      reference
        "RFC3209: RSVP-TE: Extensions to RSVP for LSP Tunnels.
         RFC5495: Description of the Resource Reservation Protocol -
         Traffic-Engineered (RSVP-TE) Graceful Restart Procedures.";
      }
    }
  }

  grouping session-attributes {
    description
      "Top level grouping for RSVP session properties.";
    leaf destination-port {
      type uint16;
      description
        "RSVP destination port.";
      reference
        "RFC2205";
    }
    leaf protocol-id {
      type uint8;
      description
        "The IP protocol ID.";
      reference
        "RFC2205, section 3.2";
    }
    leaf source {
      type inet:ip-address;
      description
        "RSVP source address.";
      reference
        "RFC2205";
    }
    leaf destination {
      type inet:ip-address;
      description
        "RSVP destination address.";
      reference
        "RFC2205";
    }
    leaf session-name {
      type string;
      default "";
      description
        "The signaled name of this RSVP session.";
    }
    leaf session-status {
      type enumeration {
        enum up {
          description
            "RSVP session is up.";
        }
        enum down {
          description
            "RSVP session is down.";
        }
      }
      default "down";
      description
        "Enumeration of RSVP session states.";
    }
    leaf session-type {
      type identityref {
        base rsvp-session-type;
      }
      mandatory "true";
      description
        "RSVP session type.";
    }
    container psbs {
      description
        "Path State Block (PSB) container.";
      list psb {
        description
          "List of Path State Blocks.";
        leaf source-port {
          type inet:port-number;
          description
            "RSVP source port.";
          reference
            "RFC2205";
        }
        leaf expires-in {
          type uint32;
          units "seconds";
          default "180";
          description
            "Time to expiry (in seconds).";
        }
      }
    }
    container rsbs {
      description
        "Reservation State Block (RSB) container.";
      list rsb {
        description
          "List of Reservation State Blocks.";
        leaf source-port {
          type inet:port-number;
          description
            "RSVP source port.";
          reference
            "RFC2205";
        }
        leaf reservation-style {
          type identityref {
            base reservation-style;
          }
          mandatory "true";
          description
            "RSVP reservation style.";
        }
        leaf expires-in {
          type uint32;
          units "seconds";
          default "180";
          description
            "Time to expiry (in seconds).";
        }
      }
    }
  }

  grouping neighbor-attributes {
    description
      "Top level grouping for RSVP neighbor properties.";
    leaf address {
      type inet:ip-address;
      description
        "Address of the RSVP neighbor.";
    }
    leaf epoch {
      type uint32;
      default "0";
      description
        "Neighbor epoch.";
      reference "RFC5063";
    }
    leaf expiry-time {
      type uint32;
      units "seconds";
      default "180";
      description
        "Neighbor expiry time after which the neighbor state is
         purged if no states associated with it.";
    }
    uses neighbor-graceful-restart {
      description
        "Allows configuration applicable to all
         neighbors";
    }
    leaf hello-status {
      type enumeration {
        enum enabled {
          description
            "RSVP Hellos enabled.";
        }
        enum disabled {
          description
            "RSVP Hellos disabled.";
        }
        enum restarting {
          description
            "RSVP restarting.";
        }
      }
      config false;
      description
        "RSVP Hello status.";
    }
    leaf interface {
      type if:interface-ref;
      description
        "Interface where RSVP neighbor was detected.";
    }
    leaf neighbor-status {
      type enumeration {
        enum up {
          description
            "Neighbor state up.";
        }
        enum down {
          description
            "Neighbor state down.";
        }
        enum hello-disable {
          description
            "RSVP Hellos disabled.";
        }
        enum restarting {
          description
            "RSVP neighbor restarting.";
        }
      }
      config false;
      description
        "RSVP neighbor state.";
    }
    leaf refresh-reduction-capable {
      type boolean;
      default "true";
      description
        "Enables all RSVP refresh reduction message bundling, RSVP
         message ID, reliable message delivery and Srefresh
         messages.";
      reference
        "RFC2961 RSVP Refresh Overhead Reduction Extensions";
    }
    leaf restart-count {
      type yang:counter32;
      config false;
      description
        "Number of times this RSVP neighbor has restarted.";
    }
    leaf restart-time {
      type yang:date-and-time;
      config false;
      description
        "Last restart time of the RSVP neighbor.";
      reference "RFC3473";
    }
  }

  grouping packet-statistics {
    description
      "Packet statistics grouping.";
    container packets {
      description
        "Packet statistics container.";
      leaf sent {
        type yang:counter64;
        description
          "RSVP packet sent count.";
      }
      leaf received {
        type yang:counter64;
        description
          "RSVP packet received count.";
      }
    }
  }

  grouping message-statistics {
    description
      "RSVP protocol statistics grouping.";
    container messages {
      description
        "RSVP protocol statistics container.";
      leaf ack-sent {
        type yang:counter64;
        description
          "RSVP Hello sent count.";
      }
      leaf ack-received {
        type yang:counter64;
        description
          "RSVP Hello received count.";
      }
      leaf bundle-sent {
        type yang:counter64;
        description
          "RSVP Bundle message sent count.";
      }
      leaf bundle-received {
        type yang:counter64;
        description
          "RSVP Bundle message received count.";
      }
      leaf hello-sent {
        type yang:counter64;
        description
          "RSVP Hello message sent count.";
      }
      leaf hello-received {
        type yang:counter64;
        description
          "RSVP Hello message received count.";
      }
      leaf integrity-challenge-sent {
        type yang:counter64;
        description
          "RSVP Integrity Challenge message sent count.";
      }
      leaf integrity-challenge-received {
        type yang:counter64;
        description
          "RSVP Integrity Challenge message received count.";
      }
      leaf integrity-response-sent {
        type yang:counter64;
        description
          "RSVP Integrity Response message sent count.";
      }
      leaf integrity-response-received {
        type yang:counter64;
        description
          "RSVP Integrity Response message received count.";
      }
      leaf notify-sent {
        type yang:counter64;
        description
          "RSVP Notify message sent count.";
      }
      leaf notify-received {
        type yang:counter64;
        description
          "RSVP Notify message received count.";
      }
      leaf path-sent {
        type yang:counter64;
        description
          "RSVP Path message sent count.";
      }
      leaf path-received {
        type yang:counter64;
        description
          "RSVP Path message received count.";
      }
      leaf path-err-sent {
        type yang:counter64;
        description
          "RSVP Path error message sent count.";
      }
      leaf path-err-received {
        type yang:counter64;
        description
          "RSVP Path error message received count.";
      }
      leaf path-tear-sent {
        type yang:counter64;
        description
          "RSVP Path tear message sent count.";
      }
      leaf path-tear-received {
        type yang:counter64;
        description
          "RSVP Path tear message received count.";
      }
      leaf resv-sent {
        type yang:counter64;
        description
          "RSVP Resv message sent count.";
      }
      leaf resv-received {
        type yang:counter64;
        description
          "RSVP Resv message received count.";
      }
      leaf resv-confirm-sent {
        type yang:counter64;
        description
          "RSVP Confirm message sent count.";
      }
      leaf resv-confirm-received {
        type yang:counter64;
        description
          "RSVP Confirm message received count.";
      }
      leaf resv-err-sent {
        type yang:counter64;
        description
          "RSVP Resv error message sent count.";
      }
      leaf resv-err-received {
        type yang:counter64;
        description
          "RSVP Resv error message received count.";
      }
      leaf resv-tear-sent {
        type yang:counter64;
        description
          "RSVP Resv tear message sent count.";
      }
      leaf resv-tear-received {
        type yang:counter64;
        description
          "RSVP Resv tear message received count.";
      }
      leaf srefresh-sent {
        type yang:counter64;
        description
          "RSVP Srefresh message sent count.";
      }
      leaf srefresh-received {
        type yang:counter64;
        description
          "RSVP Srefresh message received count.";
      }
      leaf unknown-messages-received {
        type yang:counter64;
        description
          "Unknown messages received count.";
      }
    }
  }

  grouping errors-statistics {
    description
      "Error statistics grouping.";
    container errors {
      description
        "Error statistics container.";
      leaf authenticate {
        type yang:counter64;
        description
          "The total number of RSVP packets received with an
           authentication failure.";
      }
      leaf checksum {
        type yang:counter64;
        description
          "The total number of RSVP packets received with an invalid
           checksum value.";
      }
      leaf packet-length {
        type yang:counter64;
        description
          "The total number of packets received with an invalid
           packet length.";
      }
    }
  }

  grouping statistics {
    description
      "RSVP statistic attributes.";
    container statistics {
      config false;
      description
        "RSVP statistics container.";
      uses message-statistics;
      uses packet-statistics;
      uses errors-statistics;
    }
  }

  grouping intf-attributes {
    description
      "Top level grouping for RSVP interface properties.";
    uses refresh-reduction;
    uses hellos;
    uses authentication;
    uses statistics;
  }

  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol" {
    when "rt:type = 'rsvp:rsvp'" {
      description
        "This augment is only valid when routing protocol instance
         type is RSVP.";
    }
    description
      "RSVP protocol augmentation.";
    container rsvp {
      presence "Enable RSVP feature";
      description
        "RSVP feature container";
      container interfaces {
        description
          "RSVP interfaces container.";
        uses intf-attributes;
        list interface {
          key "name";
          description
            "RSVP interfaces.";
          leaf name {
            type if:interface-ref;
            description
              "RSVP interface.";
          }
          uses intf-attributes;
        }
      }
      container sessions {
        description
          "RSVP sessions container.";
        list session-ip {
          key "destination protocol-id destination-port";
          config false;
          description
            "List of RSVP sessions.";
          uses session-attributes;
        }
      }
      container neighbors {
        description
          "RSVP neighbors container";
        list neighbor {
          key "address";
          description
            "List of RSVP neighbors";
          uses neighbor-attributes;
        }
      }
      uses graceful-restart;
    }
  }

  grouping session-ref {
    description
      "Session reference information";
    leaf destination {
      type leafref {
        path "/rt:routing/rt:control-plane-protocols"
           + "/rt:control-plane-protocol/rsvp:rsvp"
           + "/rsvp:sessions/rsvp:session-ip/destination";
      }
      mandatory true;
      description
        "The RSVP session destination.";
    }
    leaf protocol-id {
      type uint8;
      mandatory true;
      description
        "The RSVP session protocol ID.";
    }
    leaf destination-port {
      type inet:ip-address;
      mandatory true;
      description
        "The RSVP session destination port.";
    }
  }

  rpc clear-session {
    nacm:default-deny-all;
    description
      "Clears RSVP sessions RPC";
    input {
      leaf routing-protocol-instance-name {
        type leafref {
          path "/rt:routing/rt:control-plane-protocols/"
             + "rt:control-plane-protocol/rt:name";
        }
        mandatory true;
        description
          "Name of the RSVP protocol instance whose session
           is being cleared.

           If the corresponding RSVP instance doesn't exist,
           then the operation will fail with an error-tag of
           'data-missing' and an error-app-tag of
           'routing-protocol-instance-not-found'.";
      }
      choice filter-type {
        mandatory true;
        description
          "Filter choice";
        case match-all {
          leaf all {
            type empty;
            mandatory true;
            description
              "Match all RSVP sessions.";
          }
        }
        case match-one {
          container session-info {
            description
              "Specifies the specific session to invoke the operation
               on.";
            choice session-type {
              mandatory true;
              description
                "The RSVP session type.";
              case rsvp-session-ip {
                uses session-ref;
              }
            }
          }
        }
      }
    }
  }

  rpc clear-neighbor {
    nacm:default-deny-all;
    description
      "RPC to clear the RSVP Hello session to a neighbor.";
    input {
      leaf routing-protocol-instance-name {
        type leafref {
          path "/rt:routing/rt:control-plane-protocols/"
             + "rt:control-plane-protocol/rt:name";
        }
        mandatory true;
        description
          "Name of the RSVP protocol instance whose session
           is being cleared.

           If the corresponding RSVP instance doesn't exist,
           then the operation will fail with an error-tag of
           'data-missing' and an error-app-tag of
           'routing-protocol-instance-not-found'.";
      }
      choice filter-type {
        mandatory true;
        description
          "The Filter choice.";
        case match-all {
          leaf all {
            type empty;
            mandatory true;
            description
              "Match all RSVP neighbor sessions.";
          }
        }
        case match-one {
          leaf neighbor-address {
            type leafref {
              path "/rt:routing/rt:control-plane-protocols"
                 + "/rt:control-plane-protocol/rsvp:rsvp"
                 + "/rsvp:neighbors/rsvp:neighbor/address";
            }
            mandatory true;
            description
              "Match the specific RSVP neighbor session.";
          }
        }
      }
    }
  }

  rpc clear-authentication {
    nacm:default-deny-all;
    description
      "Clears the RSVP Security Association (SA) before the
       lifetime expires.";
    input {
      leaf routing-protocol-instance-name {
        type leafref {
          path "/rt:routing/rt:control-plane-protocols/"
             + "rt:control-plane-protocol/rt:name";
        }
        mandatory true;
        description
          "Name of the RSVP protocol instance whose session
           is being cleared.

           If the corresponding RSVP instance doesn't exist,
           then the operation will fail with an error-tag of
           'data-missing' and an error-app-tag of
           'routing-protocol-instance-not-found'.";
      }
      choice filter-type {
        mandatory true;
        description
          "Filter choice";
        case match-all {
          leaf all {
            type empty;
            mandatory true;
            description
              "Match all RSVP security associations.";
          }
        }
        case match-one-interface {
          leaf interface {
            type if:interface-ref;
            description
              "Interface where RSVP security association(s) to be
               detected.";
          }
        }
      }
    }
  }
}
<CODE ENDS>
]]></artwork></figure>

</section>
</section>
<section anchor="rsvp-extended-yang-model" title="RSVP Extended YANG Model">

<t>The RSVP extended module augments the RSVP base module with optional feature data
as described in <xref target="OptionalFeatures"/>.</t>

<section anchor="tree-diagram-1" title="Tree Diagram">

<t><xref target="fig-rsvp-extended"/> shows the YANG tree representation for configuration and
state data that are covered in ‘ietf-rsvp-extended’ YANG module:</t>

<figure title="RSVP extended module tree diagram" anchor="fig-rsvp-extended"><artwork><![CDATA[
module: ietf-rsvp-extended

  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp
            /rsvp:graceful-restart:
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces:
    +--rw refresh-interval?        uint32
    +--rw refresh-misses?          uint32
    +--rw checksum-enable?         empty
    +--rw patherr-state-removal?   empty
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces
            /rsvp:statistics/rsvp:packets:
    +--ro discontinuity-time?   yang:date-and-time
    +--ro out-dropped?          yang:counter64
    +--ro in-dropped?           yang:counter64
    +--ro out-errors?           yang:counter64
    +--ro in-errors?            yang:counter64
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces
            /rsvp:refresh-reduction:
    +--rw bundle-message-max-size?    uint32
    +--rw ack-hold-time?              uint32
    +--rw ack-max-size?               uint32
    +--rw ack-retransmit-time?        uint32
    +--rw srefresh-ack-desired?       empty
    +--rw srefresh-max-size?          uint32
    +--rw srefresh-relative-period?   uint8
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces
            /rsvp:hellos:
    +--rw interface-based?   empty
    +--rw hello-interval?    uint32
    +--rw hello-misses?      uint32
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces
            /rsvp:authentication:
    +--rw lifetime?      uint32
    +--rw window-size?   uint32
    +--rw challenge?     empty
    +--rw retransmits?   uint32
    +--rw key-chain?     key-chain:key-chain-ref
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces
            /rsvp:interface:
    +--rw refresh-interval?        uint32
    +--rw refresh-misses?          uint32
    +--rw checksum-enable?         empty
    +--rw patherr-state-removal?   empty
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces
            /rsvp:interface/rsvp:statistics/rsvp:packets:
    +--ro discontinuity-time?   yang:date-and-time
    +--ro out-dropped?          yang:counter64
    +--ro in-dropped?           yang:counter64
    +--ro out-errors?           yang:counter64
    +--ro in-errors?            yang:counter64
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces
            /rsvp:interface/rsvp:refresh-reduction:
    +--rw bundle-message-max-size?    uint32
    +--rw ack-hold-time?              uint32
    +--rw ack-max-size?               uint32
    +--rw ack-retransmit-time?        uint32
    +--rw srefresh-ack-desired?       empty
    +--rw srefresh-max-size?          uint32
    +--rw srefresh-relative-period?   uint8
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces
            /rsvp:interface/rsvp:hellos:
    +--rw interface-based?   empty
    +--rw hello-interval?    uint32
    +--rw hello-misses?      uint32
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces
            /rsvp:interface/rsvp:authentication:
    +--rw lifetime?      uint32
    +--rw window-size?   uint32
    +--rw challenge?     empty
    +--rw retransmits?   uint32
    +--rw key-chain?     key-chain:key-chain-ref
]]></artwork></figure>

</section>
<section anchor="yang-module" title="YANG Module">

<t>The ‘ietf-rsvp-extended’ module imports from the following modules:</t>

<t><list style="symbols">
  <t>ietf-rsvp defined in this document</t>
  <t>ietf-routing defined in <xref target="RFC8349"/></t>
  <t>ietf-yang-types and ietf-inet-types defined in <xref target="RFC6991"/></t>
  <t>ietf-key-chain defined in <xref target="RFC8177"/></t>
</list></t>

<t><xref target="fig-rsvp-extended-mod"/> shows the RSVP extended YANG module:</t>

<t>This module also references the following documents:
<xref target="RFC3473"/>, <xref target="RFC2747"/>, <xref target="RFC3209"/>, <xref target="RFC2205"/>, <xref target="RFC2961"/>, and <xref target="RFC5495"/>.</t>

<figure title="RSVP extended YANG module" anchor="fig-rsvp-extended-mod"><artwork><![CDATA[
<CODE BEGINS> file "ietf-rsvp-extended@2021-12-02.yang"
module ietf-rsvp-extended {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-rsvp-extended";
  prefix rsvp-extended;

  import ietf-rsvp {
    prefix rsvp;
    reference
      "RFCXXXX: A YANG Data Model for Resource Reservation Protocol
       (RSVP)";
  }
  import ietf-routing {
    prefix rt;
    reference
      "RFC8349: A YANG Data Model for Routing Management
       (NMDA Version)";
  }
  import ietf-yang-types {
    prefix yang;
    reference
      "RFC6991: Common YANG Data Types";
  }
  import ietf-key-chain {
    prefix key-chain;
    reference
      "RFC8177: YANG Data Model for Key Chains";
  }

  organization
    "IETF Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact
    "WG Web:   <http://tools.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>

     Editor:   Vishnu Pavan Beeram
               <mailto:vbeeram@juniper.net>

     Editor:   Tarek Saad
               <mailto:tsaad@juniper.net>

     Editor:   Rakesh Gandhi
               <mailto:rgandhi@cisco.com>

     Editor:   Xufeng Liu
               <mailto: xufeng.liu.ietf@gmail.com>

     Editor:   Igor Bryskin
               <mailto:i_bryskin@yahoo.com>";
  description
    "This module contains the Extended RSVP YANG data model.
     The model fully conforms to the Network Management Datastore
     Architecture (NMDA).

     Copyright (c) 2019 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).
     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";

  // RFC Ed.: replace XXXX with actual RFC number and remove this
  // note.
  // RFC Ed.: update the date below with the date of RFC publication
  // and remove this note.

  revision 2021-12-02 {
    description
      "Initial version.";
    reference
      "RFCXXXX: A YANG Data Model for Resource Reservation Protocol
       (RSVP)";
  }

  grouping graceful-restart-extended {
    description
      "Configuration parameters relating to RSVP Graceful-Restart.";
  }

  grouping authentication-extended {
    description
      "Configuration parameters relating to RSVP authentication.";
    leaf lifetime {
      type uint32 {
        range "30..86400";
      }
      units "seconds";
      default "30";
      description
        "Life time for each security association.";
      reference
        "RFC2747: RSVP Cryptographic Authentication";
    }
    leaf window-size {
      type uint32 {
        range "1..64";
      }
      default "2";
      description
        "Window-size to limit number of out-of-order messages.";
      reference
        "RFC2747: RSVP Cryptographic Authentication";
    }
    leaf challenge {
      type empty;
      description
        "Enable challenge messages.";
      reference
        "RFC2747: RSVP Cryptographic Authentication";
    }
    leaf retransmits {
      type uint32 {
        range "1..10000";
      }
      default "1";
      description
        "Number of retransmits when messages are dropped.";
      reference
        "RFC2747: RSVP Cryptographic Authentication";
    }
    leaf key-chain {
      type key-chain:key-chain-ref;
      description
        "Key chain name to authenticate RSVP
         signaling messages.";
      reference
        "RFC2747: RSVP Cryptographic Authentication";
    }
  }

  grouping hellos-extended {
    description
      "Configuration parameters relating to RSVP hellos";
    leaf interface-based {
      type empty;
      description
        "Enable interface-based Hello adjacency if present.";
    }
    leaf hello-interval {
      type uint32;
      units "milliseconds";
      default "9000";
      description
        "Configure interval between successive Hello messages in
         milliseconds.";
      reference
        "RFC3209: RSVP-TE: Extensions to RSVP for LSP Tunnels.
         RFC5495: Description of the Resource Reservation Protocol -
         Traffic-Engineered (RSVP-TE) Graceful Restart Procedures.";
    }
    leaf hello-misses {
      type uint32 {
        range "1..10";
      }
      default "3";
      description
        "Configure max number of consecutive missed Hello messages.";
      reference
        "RFC3209: RSVP-TE: Extensions to RSVP for LSP Tunnels.
         RFC5495: Description of the Resource Reservation Protocol -
         Traffic- Engineered (RSVP-TE) Graceful Restart Procedures.";
    }
  }

  grouping signaling-parameters-extended {
    description
      "Configuration parameters relating to RSVP signaling";
    leaf refresh-interval {
      type uint32;
      units "seconds";
      default "30";
      description
        "Set interval between successive refreshes";
      reference "RFC2205";
    }
    leaf refresh-misses {
      type uint32;
      default "9";
      description
        "Set max number of consecutive missed messages for state
         expiry";
      reference "RFC2205";
    }
    leaf checksum-enable {
      type empty;
      description
        "Enable RSVP message checksum computation";
      reference "RFC2205";
    }
    leaf patherr-state-removal {
      type empty;
      description
        "State-Removal flag in Path Error message if present.";
      reference "RFC3473";
    }
  }

  grouping refresh-reduction-extended {
    description
      "Configuration parameters relating to RSVP refresh reduction.";
    leaf bundle-message-max-size {
      type uint32 {
        range "512..65000";
      }
      default "1500";
      description
        "Configure maximum size (bytes) of a single RSVP Bundle
         message.";
      reference "RFC2961";
    }
    leaf ack-hold-time {
      type uint32;
      units "milliseconds";
      default "9000";
      description
        "Configure hold time in milliseconds for sending RSVP ACK
         message(s).";
      reference "RFC2961";
    }
    leaf ack-max-size {
      type uint32;
      default "1500";
      description
        "Configure max size of a single RSVP ACK message.";
      reference "RFC2961";
    }
    leaf ack-retransmit-time {
      type uint32;
      units "milliseconds";
      default "500";
      description
        "Configure min delay in milliseconds to wait for an
         acknowledgment before being retransmitted.";
      reference "RFC2961";
    }
    leaf srefresh-ack-desired {
      type empty;
      description
        "Enables the sending of MESSAGE_ID with ACK_Desired
         set with Srefresh messages.";
      reference "RFC2961";
    }
    leaf srefresh-max-size {
      type uint32 {
        range "20..65000";
      }
      default "1500";
      description
        "Configure max size (bytes) of a single RSVP Srefresh
         message.";
      reference "RFC2961";
    }
    leaf srefresh-relative-period {
      type uint8 {
        range "10..100";
      }
      description
        "Configures the period of Srefreshes relative to standard
         refresh message period in percentage.";
    }
  }

  grouping packets-extended-statistics {
    description
      "Packet statistics.";
    leaf discontinuity-time {
      type yang:date-and-time;
      description
        "The time on the most recent occasion at which any one or
         more of the statistic counters suffered a discontinuity.
         If no such discontinuities have occurred since the last
         re-initialization of the local management subsystem, then
         this node contains the time the local management subsystem
         re-initialized itself.";
    }
    leaf out-dropped {
      type yang:counter64;
      description
        "Out RSVP packet drop count.";
    }
    leaf in-dropped {
      type yang:counter64;
      description
        "In RSVP packet drop count.";
    }
    leaf out-errors {
      type yang:counter64;
      description
        "Out RSVP packet errors count.";
    }
    leaf in-errors {
      type yang:counter64;
      description
        "In RSVP packet rx errors count.";
    }
  }

  /**
   * RSVP extensions augmentations
   */
  /* RSVP graceful restart*/

  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/"
        + "rsvp:graceful-restart" {
    description
      "RSVP graceful restart configuration extensions";
    uses graceful-restart-extended;
  }


  /**
   * RSVP all interfaces extensions
   */

  /* RSVP interface signaling extensions */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces" {
    description
      "RSVP signaling all interfaces configuration extensions";
    uses signaling-parameters-extended;
  }

  /* Packet statistics extension */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces/"
        + "rsvp:statistics/rsvp:packets" {
    description
      "RSVP packets all interfaces configuration extensions";
    uses packets-extended-statistics;
  }

  /* RSVP refresh reduction extension */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces/"
        + "rsvp:refresh-reduction" {
    description
      "RSVP refresh-reduction all interface configuration
       extensions";
    uses refresh-reduction-extended;
  }

  /* RSVP hellos extension */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces/"
        + "rsvp:hellos" {
    description
      "RSVP hello all interfaces configuration extensions";
    uses hellos-extended;
  }

  /* RSVP authentication extension */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces/"
        + "rsvp:authentication" {
    description
      "RSVP authentication all interfaces configuration extensions";
    uses authentication-extended;
  }

  /**
   * RSVP per interface extensions
   */
  /* RSVP interface signaling extensions */

  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces/"
        + "rsvp:interface" {
    description
      "RSVP signaling interface configuration extensions";
    uses signaling-parameters-extended;
  }

  /* Packet statistics extension */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces/"
        + "rsvp:interface/rsvp:statistics/rsvp:packets" {
    description
      "RSVP packet stats extensions";
    uses packets-extended-statistics;
  }

  /* RSVP refresh reduction extension */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces/"
        + "rsvp:interface/rsvp:refresh-reduction" {
    description
      "RSVP refresh-reduction interface configuration extensions";
    uses refresh-reduction-extended;
  }

  /* RSVP hellos extension */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces/"
        + "rsvp:interface/rsvp:hellos" {
    description
      "RSVP hello interface configuration extensions";
    uses hellos-extended;
  }

  /* RSVP authentication extension */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/rsvp:rsvp/rsvp:interfaces/"
        + "rsvp:interface/rsvp:authentication" {
    description
      "RSVP authentication interface configuration extensions";
    uses authentication-extended;
  }
}
<CODE ENDS>
]]></artwork></figure>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This document registers the following URIs in the IETF XML registry
<xref target="RFC3688"/>.  Following the format in <xref target="RFC3688"/>, the following registration
is requested to be made.</t>

<figure><artwork><![CDATA[
   URI: urn:ietf:params:xml:ns:yang:ietf-rsvp
   Registrant Contact:  The IESG.
   XML: N/A, the requested URI is an XML namespace.

   URI: urn:ietf:params:xml:ns:yang:ietf-rsvp-extended
   Registrant Contact:  The IESG.
   XML: N/A, the requested URI is an XML namespace.
]]></artwork></figure>

<t>This document registers two YANG modules in the YANG Module Names
registry <xref target="RFC6020"/>.</t>

<figure><artwork><![CDATA[
   name:       ietf-rsvp
   namespace:  urn:ietf:params:xml:ns:yang:ietf-rsvp
   prefix:     rsvp
   reference:  RFCXXXX

   name:       ietf-rsvp-extended
   namespace:  urn:ietf:params:xml:ns:yang:ietf-rsvp-extended
   prefix:     rsvp-extended
   reference:  RFCXXXX
]]></artwork></figure>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>The YANG module specified in this document defines a schema for data that is
designed to be accessed via network management protocols such as NETCONF
<xref target="RFC6241"/> or RESTCONF <xref target="RFC8040"/>. The lowest NETCONF layer is the secure
transport layer, and the mandatory-to-implement secure transport is Secure
Shell (SSH) <xref target="RFC6242"/>.  The lowest RESTCONF layer is HTTPS, and the
mandatory-to-implement secure transport is TLS <xref target="RFC8446"/>.</t>

<t>The Network Configuration Access Control Model (NACM) <xref target="RFC8341"/> provides the
means to restrict access for particular NETCONF or RESTCONF users to a
preconfigured subset of all available NETCONF or RESTCONF protocol operations
and content.</t>

<t>There are a number of data nodes defined in the YANG module(s) defined in this
document that are writable/creatable/deletable (i.e., config true, which is the
default).  These data nodes may be considered sensitive or vulnerable in some
network environments.  Write operations (e.g., &lt;edit-config&gt;) to these data
nodes without proper protection can have a negative effect on network
operations. These are the subtrees and data nodes and their sensitivity/vulnerability:</t>

<t>/rt:routing/rt:control-plane-protocols/rt:control-plane-protocol/rsvp:rsvp/
    /rsvp:globals
    /rsvp:interfaces
    /rsvp:sessions</t>

<t><list style='empty'>
  <t>All of which are considered sensitive and if access to either of these is
compromised, it can result in temporary network outages or be employed to
mount DoS attacks.</t>
</list></t>

<t>Some of the readable data nodes in this YANG module may be considered sensitive
or vulnerable in some network environments. It is thus important to control
read access (e.g., via get, get-config, or notification) to these data nodes.
These are the subtrees and data nodes and their sensitivity/vulnerability:</t>

<t>/rt:routing/rt:control-plane-protocols/rt:control-plane-protocol/rsvp:rsvp/
    /rsvp:globals
    /rsvp:interfaces
    /rsvp:sessions</t>

<t><list style='empty'>
  <t>Additional information from these state data nodes can be inferred with respect
to the network topology, and device location and subsequently be used to mount
other attacks in the network.</t>
</list></t>

<t>For RSVP authentication, the configuration supported is via the specification of
key-chains <xref target="RFC8177"/> or the direct specification of key and authentication
algorithm, and hence security considerations of <xref target="RFC8177"/> are inherited.  This
includes the considerations with respect to the local storage and handling of
authentication keys.</t>

<t>Some of the RPC operations defined in this YANG module may be considered
sensitive or vulnerable in some network environments.  It is thus
important to control access to these operations.  The RSVP YANG
module support the “clear-session” and “clear-neighbor” RPCs.  If
access to either of these is compromised, they can result in
temporary network outages be employed to mount DoS attacks.</t>

<t>The security considerations spelled out in the YANG 1.1 specification
<xref target="RFC7950"/> apply for this document as well.</t>

</section>
<section anchor="acknowledgement" title="Acknowledgement">

<t>The authors would like to thank Tom Petch for reviewing and providing useful
feedback about the document. The authors would also like to thank Lou Berger
for reviewing and providing valuable feedback on this document.</t>

</section>
<section anchor="appendix-a" title="Appendix A">

<t>A simple network setup is shown in {fig-example title}.  R1 runs the RSVP routing
protocol on both interfaces ‘ge0/0/0/1’, and ‘ge0/0/0/2’.</t>

<figure title="Example of network configuration." anchor="fig-example"><artwork><![CDATA[
State on R1:

Sessions:
=========
Destination         Protocol-ID Dest-port 
198.51.100.1        10          10 

Neighbors:
==========
Neighbor Address    Interface
192.0.2.6           ge0/0/0/1

                               192.0.2.5/30
                              ge0/0/0/1
                              +---
                             /
                        +-----+
                        | R1  |
                        +-----+
                             \
                              +---
                              ge0/0/0/2
                               192.0.2.13/30

]]></artwork></figure>

<t>The instance data tree could then be as follows:</t>

<figure title="Example RSVP JSON encoded data instance tree." anchor="fig-instance-tree"><artwork><![CDATA[
{
  "ietf-routing:routing": {
    "control-plane-protocols": {
      "control-plane-protocol": [
        {
          "type": "rt:routing-protocol",
          "name": "rsvp:rsvp",
          "ietf-rsvp:rsvp": {
            "interfaces": {
              "refresh-reduction": {
                "enabled": true,
                "ietf-rsvp-extended:bundle-message-max-size": 2000,
                "ietf-rsvp-extended:reliable-ack-hold-time": 180,
                "ietf-rsvp-extended:reliable-ack-max-size": 2000,
                "ietf-rsvp-extended:reliable-retransmit-time": 180,
                "ietf-rsvp-extended:reliable-srefresh": [
                  null
                ],
                "ietf-rsvp-extended:summary-max-size": 2000
              },
              "hellos": {
                "enabled": true,
                "ietf-rsvp-extended:interface-based": [
                  null
                ],
                "ietf-rsvp-extended:hello-interval": 27000,
                "ietf-rsvp-extended:hello-misses": 3
              },
              "statistics": {
                "messages": {
                  "ack-sent": "777",
                  "ack-received": "4840",
                  "bundle-sent": "2195",
                  "bundle-received": "293",
                  "hello-sent": "2516",
                  "hello-received": "3535",
                  "integrity-challenge-sent": "2737",
                  "integrity-challenge-received": "2330",
                  "integrity-response-sent": "895",
                  "integrity-response-received": "1029",
                  "path-sent": "1197",
                  "path-received": "3568",
                  "path-err-sent": "4658",
                  "path-err-received": "695",
                  "path-tear-sent": "3706",
                  "path-tear-received": "2604",
                  "resv-sent": "3353",
                  "resv-received": "3129",
                  "resv-err-sent": "1787",
                  "resv-err-received": "3205",
                  "resv-tear-sent": "4465",
                  "resv-tear-received": "3056",
                  "summary-refresh-sent": "655",
                  "summary-refresh-received": "3856"
                },
                "packets": {
                  "sent": "2147",
                  "received": "4374",
                  "ietf-rsvp-extended:discontinuity-time":
                  "2015-10-24T17:11:27+02:00",
                  "ietf-rsvp-extended:out-dropped": "2696",
                  "ietf-rsvp-extended:in-dropped": "941",
                  "ietf-rsvp-extended:out-errors": "19",
                  "ietf-rsvp-extended:in-errors": "2732"
                },
                "errors": {
                  "authenticate": "2540",
                  "checksum": "2566",
                  "packet-length": "267"
                }
              },
              "interface": [
                {
                  "interface": "ge0/0/0/1",
                  "statistics": {
                    "messages": {
                      "ack-sent": "2747",
                      "ack-received": "4934",
                      "bundle-sent": "1618",
                      "bundle-received": "3668",
                      "hello-sent": "4288",
                      "hello-received": "1194",
                      "integrity-challenge-sent": "4850",
                      "integrity-challenge-received": "3979",
                      "integrity-response-sent": "479",
                      "integrity-response-received": "1773",
                      "path-sent": "2230",
                      "path-received": "1793",
                      "path-err-sent": "465",
                      "path-err-received": "1859",
                      "path-tear-sent": "923",
                      "path-tear-received": "3924",
                      "resv-sent": "3203",
                      "resv-received": "2507",
                      "resv-err-sent": "1259",
                      "resv-err-received": "2445",
                      "resv-tear-sent": "3045",
                      "resv-tear-received": "4676",
                      "summary-refresh-sent": "365",
                      "summary-refresh-received": "2129"
                    },
                    "packets": {
                      "sent": "847",
                      "received": "3114",
                      "ietf-rsvp-extended:discontinuity-time":
                      "2015-10-24T17:11:27+02:00",
                      "ietf-rsvp-extended:out-dropped": "1841",
                      "ietf-rsvp-extended:in-dropped": "4832",
                      "ietf-rsvp-extended:out-errors": "1334",
                      "ietf-rsvp-extended:in-errors": "3900"
                    },
                    "errors": {
                      "authenticate": "3494",
                      "checksum": "4374",
                      "packet-length": "2456"
                    }
                  }
                },
                {
                  "interface": "ge0/0/0/2",
                  "statistics": {
                    "messages": {
                      "ack-sent": "1276",
                      "ack-received": "2427",
                      "bundle-sent": "4053",
                      "bundle-received": "3509",
                      "hello-sent": "3261",
                      "hello-received": "2863",
                      "integrity-challenge-sent": "4744",
                      "integrity-challenge-received": "3554",
                      "integrity-response-sent": "3155",
                      "integrity-response-received": "169",
                      "path-sent": "3853",
                      "path-received": "409",
                      "path-err-sent": "4227",
                      "path-err-received": "2830",
                      "path-tear-sent": "1742",
                      "path-tear-received": "3344",
                      "resv-sent": "3154",
                      "resv-received": "3492",
                      "resv-err-sent": "3112",
                      "resv-err-received": "3974",
                      "resv-tear-sent": "3657",
                      "resv-tear-received": "533",
                      "summary-refresh-sent": "4036",
                      "summary-refresh-received": "2123"
                    },
                    "packets": {
                      "sent": "473",
                      "received": "314",
                      "ietf-rsvp-extended:discontinuity-time":
                      "2015-10-24T17:11:27+02:00",
                      "ietf-rsvp-extended:out-dropped": "2042",
                      "ietf-rsvp-extended:in-dropped": "90",
                      "ietf-rsvp-extended:out-errors": "1210",
                      "ietf-rsvp-extended:in-errors": "1361"
                    },
                    "errors": {
                      "authenticate": "543",
                      "checksum": "2241",
                      "packet-length": "480"
                    }
                  }
                }
              ],
              "ietf-rsvp-extended:refresh-interval": 30,
              "ietf-rsvp-extended:refresh-misses": 5,
              "ietf-rsvp-extended:checksum_enabled": true,
              "ietf-rsvp-extended:patherr-state-removal": [
                null
              ]
            },
            "sessions": {
              "session-ip": [
                {
                  "destination-port": 10,
                  "protocol-id": 10,
                  "destination": "198.51.100.1",
                  "psbs": {
                    "psb": [
                      {
                        "source-port": 10,
                        "expires-in": 100
                      }
                    ]
                  },
                  "rsbs": {
                    "rsb": [
                      {
                        "source-port": 10,
                        "reservation-style":
                        "rsvp:reservation-wildcard-filter",
                        "expires-in": 100
                      }
                    ]
                  }
                }
              ]
            },
            "neighbors": {
              "neighbor": [
                {
                  "address": "192.0.2.6",
                  "epoch": 130,
                  "expiry-time": 260,
                  "graceful-restart": {
                    "enabled": true,
                    "local-restart-time": 271,
                    "local-recovery-time": 138,
                    "neighbor-restart-time": 341,
                    "neighbor-recovery-time": 342
                  },
                  "hello-status": "enabled",
                  "interface": "ge0/0/0/1",
                  "restart-count": 2,
                  "restart-time": "2015-10-24T17:11:27+02:00"
                }
              ]
            },
            "graceful-restart": {
              "enabled": true,
              "local-restart-time": 60,
              "local-recovery-time": 180,
              "neighbor-restart-time": 80,
              "neighbor-recovery-time": 200,
              "helper-mode": {
                "enabled": true
              }
            }
          }
        }
      ]
    }
  }
}
]]></artwork></figure>

</section>
<section anchor="contributors" title="Contributors">

<figure><artwork><![CDATA[

   Himanshu Shah
   Ciena

   Email: hshah@ciena.com


   Xia Chen
   Huawei Technologies

   Email: jescia.chenxia@huawei.com


   Raqib Jones
   Brocade

   Email: raqib@Brocade.com


   Bin Wen
   Comcast

   Email: Bin_Wen@cable.comcast.com

]]></artwork></figure>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference anchor='RFC6020' target='https://www.rfc-editor.org/info/rfc6020'>
<front>
<title>YANG - A Data Modeling Language for the Network Configuration Protocol (NETCONF)</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='October' year='2010'/>
<abstract><t>YANG is a data modeling language used to model configuration and state data manipulated by the Network Configuration Protocol (NETCONF), NETCONF remote procedure calls, and NETCONF notifications. [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6020'/>
<seriesInfo name='DOI' value='10.17487/RFC6020'/>
</reference>



<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC6991' target='https://www.rfc-editor.org/info/rfc6991'>
<front>
<title>Common YANG Data Types</title>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<date month='July' year='2013'/>
<abstract><t>This document introduces a collection of common data types to be used with the YANG data modeling language.  This document obsoletes RFC 6021.</t></abstract>
</front>
<seriesInfo name='RFC' value='6991'/>
<seriesInfo name='DOI' value='10.17487/RFC6991'/>
</reference>



<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
<front>
<title>The YANG 1.1 Data Modeling Language</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='August' year='2016'/>
<abstract><t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='7950'/>
<seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>



<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8343' target='https://www.rfc-editor.org/info/rfc8343'>
<front>
<title>A YANG Data Model for Interface Management</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document defines a YANG data model for the management of network interfaces.  It is expected that interface-type-specific data models augment the generic interfaces data model defined in this document. The data model includes definitions for configuration and system state (status information and counters for the collection of statistics).</t><t>The YANG data model in this document conforms to the Network Management Datastore Architecture (NMDA) defined in RFC 8342.</t><t>This document obsoletes RFC 7223.</t></abstract>
</front>
<seriesInfo name='RFC' value='8343'/>
<seriesInfo name='DOI' value='10.17487/RFC8343'/>
</reference>



<reference anchor='RFC8349' target='https://www.rfc-editor.org/info/rfc8349'>
<front>
<title>A YANG Data Model for Routing Management (NMDA Version)</title>
<author fullname='L. Lhotka' initials='L.' surname='Lhotka'><organization/></author>
<author fullname='A. Lindem' initials='A.' surname='Lindem'><organization/></author>
<author fullname='Y. Qu' initials='Y.' surname='Qu'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document specifies three YANG modules and one submodule. Together, they form the core routing data model that serves as a framework for configuring and managing a routing subsystem.  It is expected that these modules will be augmented by additional YANG modules defining data models for control-plane protocols, route filters, and other functions.  The core routing data model provides common building blocks for such extensions -- routes, Routing Information Bases (RIBs), and control-plane protocols.</t><t>The YANG modules in this document conform to the Network Management Datastore Architecture (NMDA).  This document obsoletes RFC 8022.</t></abstract>
</front>
<seriesInfo name='RFC' value='8349'/>
<seriesInfo name='DOI' value='10.17487/RFC8349'/>
</reference>



<reference anchor='RFC8294' target='https://www.rfc-editor.org/info/rfc8294'>
<front>
<title>Common YANG Data Types for the Routing Area</title>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='Y. Qu' initials='Y.' surname='Qu'><organization/></author>
<author fullname='A. Lindem' initials='A.' surname='Lindem'><organization/></author>
<author fullname='C. Hopps' initials='C.' surname='Hopps'><organization/></author>
<author fullname='L. Berger' initials='L.' surname='Berger'><organization/></author>
<date month='December' year='2017'/>
<abstract><t>This document defines a collection of common data types using the YANG data modeling language.  These derived common types are designed to be imported by other modules defined in the routing area.</t></abstract>
</front>
<seriesInfo name='RFC' value='8294'/>
<seriesInfo name='DOI' value='10.17487/RFC8294'/>
</reference>



<reference anchor='RFC8177' target='https://www.rfc-editor.org/info/rfc8177'>
<front>
<title>YANG Data Model for Key Chains</title>
<author fullname='A. Lindem' initials='A.' role='editor' surname='Lindem'><organization/></author>
<author fullname='Y. Qu' initials='Y.' surname='Qu'><organization/></author>
<author fullname='D. Yeung' initials='D.' surname='Yeung'><organization/></author>
<author fullname='I. Chen' initials='I.' surname='Chen'><organization/></author>
<author fullname='J. Zhang' initials='J.' surname='Zhang'><organization/></author>
<date month='June' year='2017'/>
<abstract><t>This document describes the key chain YANG data model.  Key chains are commonly used for routing protocol authentication and other applications requiring symmetric keys.  A key chain is a list containing one or more elements containing a Key ID, key string, send/accept lifetimes, and the associated authentication or encryption algorithm.  By properly overlapping the send and accept lifetimes of multiple key chain elements, key strings and algorithms may be gracefully updated.  By representing them in a YANG data model, key distribution can be automated.</t></abstract>
</front>
<seriesInfo name='RFC' value='8177'/>
<seriesInfo name='DOI' value='10.17487/RFC8177'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC8639' target='https://www.rfc-editor.org/info/rfc8639'>
<front>
<title>Subscription to YANG Notifications</title>
<author fullname='E. Voit' initials='E.' surname='Voit'><organization/></author>
<author fullname='A. Clemm' initials='A.' surname='Clemm'><organization/></author>
<author fullname='A. Gonzalez Prieto' initials='A.' surname='Gonzalez Prieto'><organization/></author>
<author fullname='E. Nilsen-Nygaard' initials='E.' surname='Nilsen-Nygaard'><organization/></author>
<author fullname='A. Tripathy' initials='A.' surname='Tripathy'><organization/></author>
<date month='September' year='2019'/>
<abstract><t>This document defines a YANG data model and associated mechanisms enabling subscriber-specific subscriptions to a publisher's event streams.  Applying these elements allows a subscriber to request and receive a continuous, customized feed of publisher-generated information.</t></abstract>
</front>
<seriesInfo name='RFC' value='8639'/>
<seriesInfo name='DOI' value='10.17487/RFC8639'/>
</reference>



<reference anchor='RFC8641' target='https://www.rfc-editor.org/info/rfc8641'>
<front>
<title>Subscription to YANG Notifications for Datastore Updates</title>
<author fullname='A. Clemm' initials='A.' surname='Clemm'><organization/></author>
<author fullname='E. Voit' initials='E.' surname='Voit'><organization/></author>
<date month='September' year='2019'/>
<abstract><t>This document describes a mechanism that allows subscriber applications to request a continuous and customized stream of updates from a YANG datastore.  Providing such visibility into updates enables new capabilities based on the remote mirroring and monitoring of configuration and operational state.</t></abstract>
</front>
<seriesInfo name='RFC' value='8641'/>
<seriesInfo name='DOI' value='10.17487/RFC8641'/>
</reference>



<reference anchor='RFC8341' target='https://www.rfc-editor.org/info/rfc8341'>
<front>
<title>Network Configuration Access Control Model</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>The standardization of network configuration interfaces for use with the Network Configuration Protocol (NETCONF) or the RESTCONF protocol requires a structured and secure operating environment that promotes human usability and multi-vendor interoperability.  There is a need for standard mechanisms to restrict NETCONF or RESTCONF protocol access for particular users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content.  This document defines such an access control model.</t><t>This document obsoletes RFC 6536.</t></abstract>
</front>
<seriesInfo name='STD' value='91'/>
<seriesInfo name='RFC' value='8341'/>
<seriesInfo name='DOI' value='10.17487/RFC8341'/>
</reference>



<reference anchor='RFC3688' target='https://www.rfc-editor.org/info/rfc3688'>
<front>
<title>The IETF XML Registry</title>
<author fullname='M. Mealling' initials='M.' surname='Mealling'><organization/></author>
<date month='January' year='2004'/>
<abstract><t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t></abstract>
</front>
<seriesInfo name='BCP' value='81'/>
<seriesInfo name='RFC' value='3688'/>
<seriesInfo name='DOI' value='10.17487/RFC3688'/>
</reference>



<reference anchor='RFC6242' target='https://www.rfc-editor.org/info/rfc6242'>
<front>
<title>Using the NETCONF Protocol over Secure Shell (SSH)</title>
<author fullname='M. Wasserman' initials='M.' surname='Wasserman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>This document describes a method for invoking and running the Network Configuration Protocol (NETCONF) within a Secure Shell (SSH) session as an SSH subsystem.  This document obsoletes RFC 4742.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6242'/>
<seriesInfo name='DOI' value='10.17487/RFC6242'/>
</reference>



<reference anchor='RFC8446' target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author fullname='E. Rescorla' initials='E.' surname='Rescorla'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC2205' target='https://www.rfc-editor.org/info/rfc2205'>
<front>
<title>Resource ReSerVation Protocol (RSVP) -- Version 1 Functional Specification</title>
<author fullname='R. Braden' initials='R.' role='editor' surname='Braden'><organization/></author>
<author fullname='L. Zhang' initials='L.' surname='Zhang'><organization/></author>
<author fullname='S. Berson' initials='S.' surname='Berson'><organization/></author>
<author fullname='S. Herzog' initials='S.' surname='Herzog'><organization/></author>
<author fullname='S. Jamin' initials='S.' surname='Jamin'><organization/></author>
<date month='September' year='1997'/>
<abstract><t>This memo describes version 1 of RSVP, a resource reservation setup protocol designed for an integrated services Internet.  RSVP provides receiver-initiated setup of resource reservations for multicast or unicast data flows, with good scaling and robustness properties. [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='2205'/>
<seriesInfo name='DOI' value='10.17487/RFC2205'/>
</reference>



<reference anchor='RFC3209' target='https://www.rfc-editor.org/info/rfc3209'>
<front>
<title>RSVP-TE: Extensions to RSVP for LSP Tunnels</title>
<author fullname='D. Awduche' initials='D.' surname='Awduche'><organization/></author>
<author fullname='L. Berger' initials='L.' surname='Berger'><organization/></author>
<author fullname='D. Gan' initials='D.' surname='Gan'><organization/></author>
<author fullname='T. Li' initials='T.' surname='Li'><organization/></author>
<author fullname='V. Srinivasan' initials='V.' surname='Srinivasan'><organization/></author>
<author fullname='G. Swallow' initials='G.' surname='Swallow'><organization/></author>
<date month='December' year='2001'/>
<abstract><t>This document describes the use of RSVP (Resource Reservation Protocol), including all the necessary extensions, to establish label-switched paths (LSPs) in MPLS (Multi-Protocol Label Switching).  Since the flow along an LSP is completely identified by the label applied at the ingress node of the path, these paths may be treated as tunnels.  A key application of LSP tunnels is traffic engineering with MPLS as specified in RFC 2702.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='3209'/>
<seriesInfo name='DOI' value='10.17487/RFC3209'/>
</reference>



<reference anchor='RFC2747' target='https://www.rfc-editor.org/info/rfc2747'>
<front>
<title>RSVP Cryptographic Authentication</title>
<author fullname='F. Baker' initials='F.' surname='Baker'><organization/></author>
<author fullname='B. Lindell' initials='B.' surname='Lindell'><organization/></author>
<author fullname='M. Talwar' initials='M.' surname='Talwar'><organization/></author>
<date month='January' year='2000'/>
<abstract><t>This document describes the format and use of RSVP's INTEGRITY object to provide hop-by-hop integrity and authentication of RSVP messages. [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='2747'/>
<seriesInfo name='DOI' value='10.17487/RFC2747'/>
</reference>



<reference anchor='RFC2961' target='https://www.rfc-editor.org/info/rfc2961'>
<front>
<title>RSVP Refresh Overhead Reduction Extensions</title>
<author fullname='L. Berger' initials='L.' surname='Berger'><organization/></author>
<author fullname='D. Gan' initials='D.' surname='Gan'><organization/></author>
<author fullname='G. Swallow' initials='G.' surname='Swallow'><organization/></author>
<author fullname='P. Pan' initials='P.' surname='Pan'><organization/></author>
<author fullname='F. Tommasi' initials='F.' surname='Tommasi'><organization/></author>
<author fullname='S. Molendini' initials='S.' surname='Molendini'><organization/></author>
<date month='April' year='2001'/>
<abstract><t>This document describes a number of mechanisms that can be used to reduce processing overhead requirements of refresh messages, eliminate the state synchronization latency incurred when an RSVP (Resource ReserVation Protocol) message is lost and, when desired, refreshing state without the transmission of whole refresh messages.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='2961'/>
<seriesInfo name='DOI' value='10.17487/RFC2961'/>
</reference>



<reference anchor='RFC3473' target='https://www.rfc-editor.org/info/rfc3473'>
<front>
<title>Generalized Multi-Protocol Label Switching (GMPLS) Signaling Resource ReserVation Protocol-Traffic Engineering (RSVP-TE) Extensions</title>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='January' year='2003'/>
<abstract><t>This document describes extensions to Multi-Protocol Label Switching (MPLS) Resource ReserVation Protocol - Traffic Engineering (RSVP-TE) signaling required to support Generalized MPLS.  Generalized MPLS extends the MPLS control plane to encompass time-division (e.g., Synchronous Optical Network and Synchronous Digital Hierarchy, SONET/SDH), wavelength (optical lambdas) and spatial switching (e.g., incoming port or fiber to outgoing port or fiber).  This document presents a RSVP-TE specific description of the extensions.  A generic functional description can be found in separate documents.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='3473'/>
<seriesInfo name='DOI' value='10.17487/RFC3473'/>
</reference>



<reference anchor='RFC5063' target='https://www.rfc-editor.org/info/rfc5063'>
<front>
<title>Extensions to GMPLS Resource Reservation Protocol (RSVP) Graceful Restart</title>
<author fullname='A. Satyanarayana' initials='A.' role='editor' surname='Satyanarayana'><organization/></author>
<author fullname='R. Rahman' initials='R.' role='editor' surname='Rahman'><organization/></author>
<date month='October' year='2007'/>
<abstract><t>This document describes extensions to the Resource Reservation Protocol (RSVP) Graceful Restart mechanisms defined in RFC 3473.  The extensions enable the recovery of RSVP signaling state based on the Path message last sent by the node being restarted.</t><t>Previously defined Graceful Restart mechanisms, also called recovery from nodal faults, permit recovery of signaling state from adjacent nodes when the data plane has retained the associated forwarding state across a restart.  Those mechanisms do not fully support signaling state recovery on ingress nodes or recovery of all RSVP objects.</t><t>The extensions defined in this document build on the RSVP Hello extensions defined in RFC 3209, and extensions for state recovery on nodal faults defined in RFC 3473.  Using these extensions, the restarting node can recover all previously transmitted Path state, including the Explicit Route Object and the downstream (outgoing) interface identifiers.  The extensions can also be used to recover signaling state after the restart of an ingress node.</t><t>These extensions are not used to create or restore data plane state.</t><t>The extensions optionally support the use of Summary Refresh, defined in RFC 2961, to reduce the number of messages exchanged during the Recovery Phase when the restarting node has recovered signaling state locally for one or more Label Switched Paths (LSPs).  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5063'/>
<seriesInfo name='DOI' value='10.17487/RFC5063'/>
</reference>



<reference anchor='RFC5495' target='https://www.rfc-editor.org/info/rfc5495'>
<front>
<title>Description of the Resource Reservation Protocol - Traffic-Engineered (RSVP-TE) Graceful Restart Procedures</title>
<author fullname='D. Li' initials='D.' surname='Li'><organization/></author>
<author fullname='J. Gao' initials='J.' surname='Gao'><organization/></author>
<author fullname='A. Satyanarayana' initials='A.' surname='Satyanarayana'><organization/></author>
<author fullname='S. Bardalai' initials='S.' surname='Bardalai'><organization/></author>
<date month='March' year='2009'/>
<abstract><t>The Hello message for the Resource Reservation Protocol (RSVP) has been defined to establish and maintain basic signaling node adjacencies for Label Switching Routers (LSRs) participating in a Multiprotocol Label Switching (MPLS) traffic-engineered (TE) network.  The Hello message has been extended for use in Generalized MPLS (GMPLS) networks for state recovery of control channel or nodal faults.</t><t>The GMPLS protocol definitions for RSVP also allow a restarting node to learn which label it previously allocated for use on a Label Switched Path (LSP).</t><t>Further RSVP protocol extensions have been defined to enable a restarting node to recover full control plane state by exchanging RSVP messages with its upstream and downstream neighbors.</t><t>This document provides an informational clarification of the control plane procedures for a GMPLS network when there are multiple node failures, and describes how full control plane state can be recovered in different scenarios where the order in which the nodes restart is different.</t><t>This document does not define any new processes or procedures.  All protocol mechanisms are already defined in the referenced documents. This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='5495'/>
<seriesInfo name='DOI' value='10.17487/RFC5495'/>
</reference>



<reference anchor='rfc4558' target='https://www.rfc-editor.org/info/rfc4558'>
<front>
<title>Node-ID Based Resource Reservation Protocol (RSVP) Hello: A Clarification Statement</title>
<author fullname='Z. Ali' initials='Z.' surname='Ali'><organization/></author>
<author fullname='R. Rahman' initials='R.' surname='Rahman'><organization/></author>
<author fullname='D. Prairie' initials='D.' surname='Prairie'><organization/></author>
<author fullname='D. Papadimitriou' initials='D.' surname='Papadimitriou'><organization/></author>
<date month='June' year='2006'/>
<abstract><t>Use of Node-ID based Resource Reservation Protocol (RSVP) Hello messages is implied in a number of cases, e.g., when data and control planes are separated, when TE links are unnumbered.  Furthermore, when link level failure detection is performed by some means other than exchanging RSVP Hello messages, use of a Node-ID based Hello session is optimal for detecting signaling adjacency failure for Resource reSerVation Protocol-Traffic Engineering (RSVP-TE).  Nonetheless, this implied behavior is unclear, and this document formalizes use of the Node-ID based RSVP Hello session in some scenarios.  The procedure described in this document applies to both Multi-Protocol Label Switching (MPLS) and Generalized MPLS (GMPLS) capable nodes.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='4558'/>
<seriesInfo name='DOI' value='10.17487/RFC4558'/>
</reference>




    </references>



  </back>

<!-- ##markdown-source:
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
Pi9jCSpV5tfvtr22Mbsvlx0uzvL9bZKOs1s1+h7BK44WfONlIc2Xhbe6yrDG
q+uEa+qbuH3616ehevlJlz2AaJ9U229NtTlD80nT/WdpOmd4/0sVn0OF37se
rLuBWi3HzVuo3TW6ex916NxIzZf33qXuA+6ipog54zJnOrYvb2Ze8SLpx91W
vfwaap83ge7kNj0KNk3txf8j7qbW90/XXzntu8WaXz5tXkfN77Ve4Tpq1dfl
91JrDkPX1zouqFYQyWll3D+tXlQuojaCMK37qvHB01/4+Fu9zfkXur76F7k0
Ovh0c/Onm5uf/uZm5dsmmf7pCudPVzh/usL5v/MK59oLZ22Dx7/bb+0iGbeL
5QaTWZesdt+bN9I0XZix1uZt0FaaTRV1UImF3h4au5w5XeDV2e73egd7O/1+
Zb95WUrK7SUZKV8DHjx5Fg4li+KJdwt0aRqzla6KMMKyjeVdO1IMer29nQoZ
9DWJzd39wWgORmmagAg1DvWhyym76mb52EgG9WR9V0tXu+fWPn1Dbjuj/pOj
aiyjWw/ToN/3MKxOlto8Ujr7nNk2nUdTh4Nxs1h4FJ+s5675Lfpd4yho7BJa
3RwUhQthgKh5FNhOPlgok/rpBtd3lclaBSAHaco9x/n1QM53ofDI22j8T3iU
xneYIFfEHnhOgtjONR87SxSEcDUv0KtK2EOTy71IS3oZ9xpeghHLgJWLRRxj
FBUocivDFh6X07xgIrCMC373t6FURoq7OFcQO/UyZ7vtQM2iD4ZaiDEZVbxA
l3NI2Iyd0frdDEr4mFFxjtNJAdXVEmCtwkM1YMoPd9+vxfR9sG10zsrGGStw
YUV19BsuTbH3I5vw1yJmOZ5LGVYJliuZlVdzB89GvlIvnL3SB8pxGmeZeESl
dcDbbRelfUCxDU7ebdlVMaMLHGC9wCtfTSNMO8BTTZ1YeXSqOmalFLPVBMjr
nDuVZMfW4qNmV7GdiN0dDMEE32227Xbb60R5hTZhsHl5V7LiGfJwFGKsrmQS
noLTUIkc9zrSo5O+yiDWBukvqvixVb7Mci7k5dORGaHQR8f/W+nmpnlZRNue
Ng1rpTMrjhgfrcooAe4PHxlng/nR47NKj2iPahrdVYYHJtRtlJD7y0qfAwin
2e2UjflGqzhWwGPfdUdK78KkgQ6+vfOHyVZxglBwFozUm5Pz86PvTv5x+pI7
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

-->

</rfc>

